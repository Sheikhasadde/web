{"version":3,"sources":["firebase.js","services/authentication.js","services/appearance.js","components/EmptyState/EmptyState.js","components/ErrorBoundary/ErrorBoundary.js","components/LaunchScreen/LaunchScreen.js","components/UserAvatar/UserAvatar.js","components/Bar/Bar.js","components/HomeContent/HomeContent.js","components/AuthContent/AuthContent.js","components/AdminContent/AdminContent.js","components/NotFoundContent/NotFoundContent.js","components/Router/Router.js","components/AboutDialog/AboutDialog.js","authProviders.js","components/AuthProviderList/AuthProviderList.js","constraints.js","components/SignUpDialog/SignUpDialog.js","components/SignInDialog/SignInDialog.js","components/AccountTab/AccountTab.js","components/AppearanceTab/AppearanceTab.js","components/LinksTab/LinksTab.js","components/SecurityTab/SecurityTab.js","components/SettingsDialog/SettingsDialog.js","components/DeleteAccountDialog/DeleteAccountDialog.js","components/AlertDialog/AlertDialog.js","components/DialogHost/DialogHost.js","components/App/App.js","serviceWorker.js","index.js"],"names":["firebase","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","analytics","auth","firestore","storage","authentication","fields","Promise","resolve","reject","firstName","lastName","username","emailAddress","password","currentUser","createUserWithEmailAndPassword","then","value","user","uid","collection","doc","set","logEvent","method","catch","reason","merge","signInWithEmailAndPassword","userDocumentReference","get","source","exists","sendSignInLinkToEmail","url","handleCodeInApp","localStorage","setItem","emailLink","signInWithEmailLink","removeItem","providerId","provider","OAuthProvider","signInWithPopup","linkWithPopup","unlink","providerData","find","authProvider","signOut","sendPasswordResetEmail","avatar","includes","type","size","avatarReference","ref","child","put","uploadTaskSnapshot","getDownloadURL","updateProfile","photoURL","delete","update","updateEmail","updatePassword","lastPasswordChange","FieldValue","serverTimestamp","sendEmailVerification","getIdTokenResult","idTokenResult","claims","roles","getRoles","displayName","charAt","email","emailVerified","profileCompletion","forEach","field","length","Math","floor","userData","metadata","creationTime","moment","securityRating","toDate","diff","colors","red","id","name","import","pink","purple","deepPurple","indigo","blue","lightBlue","cyan","teal","green","lightGreen","lime","yellow","amber","orange","deepOrange","brown","gray","blueGray","getColor","colorId","camelCase","defaultPrimaryColor","defaultSecondaryColor","defaultTheme","createMuiTheme","palette","primary","secondary","primaryColor","secondaryColor","dark","appearance","defaultDark","isDefaultTheme","theme","createTheme","changeTheme","changePrimaryColor","changeSecondaryColor","changeDark","changeSyncAppearance","syncAppearance","resetTheme","EmptyState","fontSize","variant","this","props","padding","icon","title","description","Box","style","transform","position","top","left","textAlign","clone","color","Typography","Component","defaultProps","ErrorBoundary","state","hasError","eventId","error","errorInfo","Sentry","scope","setExtras","setState","children","LaunchScreen","classes","className","center","CircularProgress","withStyles","UserAvatar","context","defaultCursor","photoUrl","Avatar","alt","src","nameInitials","getNameInitials","ListItemAvatar","cursor","Bar","openMenu","event","anchorEl","currentTarget","menu","closeMenu","performingAction","onAboutClick","onSettingsClick","onSignOutClick","onSignUpClick","onSignInClick","menuItems","onClick","divide","AppBar","Toolbar","display","flexGrow","IconButton","disabled","Object","assign","Menu","open","Boolean","onClose","map","menuItem","index","hasOwnProperty","condition","key","Divider","MenuItem","ButtonGroup","Button","HomeContent","window","location","href","isSignInWithEmailLink","getItem","history","push","openSnackbar","code","message","finally","withRouter","AuthContent","AdminContent","NotFoundContent","Router","basename","REACT_APP_BASENAME","path","exact","to","AboutDialog","dialogProps","Dialog","DialogTitle","disableTypography","Tooltip","closeButton","DialogContent","List","disablePadding","ListItem","ListItemText","right","spacing","authProviders","AuthProviderList","gutterBottom","onAuthProviderClick","mb","fullWidth","orientation","AuthProviderButton","root","startIcon","constraints","presence","allowEmpty","minimum","maximum","emailAddressConfirmation","equality","attribute","passwordConfirmation","initialState","errors","SignUpDialog","signUp","validate","signUpWithEmailAddressAndPassword","signInWithAuthProvider","handleKeyPress","altKey","ctrlKey","metaKey","shiftKey","handleExited","handleEmailAddressChange","target","handleEmailAddressConfirmationChange","handlePasswordChange","handlePasswordConfirmationChange","maxWidth","disableBackdropClick","disableEscapeKeyDown","onKeyPress","onExited","Hidden","xsDown","Grid","container","direction","item","xs","divider","TextField","autoComplete","helperText","label","placeholder","required","onChange","smUp","DialogActions","marginRight","margin","grid","marginBottom","SignInDialog","getSignInButton","signIn","resetPassword","showingField","avatarUrl","loadingAvatar","sentVerificationEmail","AccountTab","getNameInitialsOrIcon","personIcon","uploadAvatar","changeAvatar","getProfileCompletion","removeAvatar","URL","revokeObjectURL","showField","fieldId","hideFields","callback","changeFirstName","changeLastName","changeUsername","changeEmailAddress","verifyEmailAddress","changeField","handleKeyDown","handleAvatarChange","files","createObjectURL","handleFirstNameChange","handleLastNameChange","handleUsernameChange","onDeleteAccountClick","hasFirstName","hasLastName","hasUsername","dialogContent","alignItems","Badge","badge","badgeContent","Fab","sizeSmall","small","loadingBadge","Fade","transitionDelay","in","unmountOnExit","thickness","hidden","accept","htmlFor","component","ListItemIcon","autoFocus","onBlur","onKeyDown","ListItemSecondaryAction","mr","lastSignInTime","format","mt","light","getSecurityRating","paddingTop","marginLeft","width","height","minHeight","AppearanceTab","handlePrimaryColorChange","handleSecondaryColorChange","handleDarkModeChange","checked","handleResetThemeClick","primaryColorLabelWidth","secondaryColorLabelWidth","primaryColorLabel","React","createRef","secondaryColorLabel","FormControl","InputLabel","Select","native","labelWidth","keys","Checkbox","Switch","current","offsetWidth","LinksTab","linkAuthProvider","unlinkAuthProvider","authProviderData","identifier","phoneNumber","SecurityTab","changePassword","hasChangedPassword","tabs","selectedTab","SettingsDialog","handleTabChange","handleIndexChange","Tabs","overflow","indicatorColor","textColor","tab","Tab","onChangeIndex","DeleteAccountDialog","deleteAccount","DialogContentText","AlertDialog","contentText","dismissiveAction","confirmingAction","acknowledgementAction","console","noTitlePadding","DialogHost","dialogs","aboutDialog","signUpDialog","signInDialog","settingsDialog","deleteAccountDialog","signOutDialog","smDown","fullScreen","mdUp","ready","snackbar","autoHideDuration","App","resetState","setTheme","openDialog","dialogId","dialog","undefined","closeDialog","closeAllDialogs","readingTime","time","closeSnackbar","clearMessage","CssBaseline","Snackbar","onAuthStateChangedObserver","onAuthStateChanged","userDocumentSnapshotListener","onSnapshot","snapshot","data","isLocalhost","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","log","onUpdate","onSuccess","dsn","release","ReactDOM","render","document","getElementById","origin","addEventListener","fetch","response","contentType","headers","status","indexOf","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.0253afc7.chunk.js","sourcesContent":["import * as firebase from \"firebase/app\";\n\nimport \"firebase/analytics\";\nimport \"firebase/auth\";\nimport \"firebase/firestore\";\nimport \"firebase/storage\";\nimport \"firebase/performance\";\n\nfirebase.initializeApp({\n  apiKey: process.env.REACT_APP_FIREBASE_API_KEY,\n  authDomain: process.env.REACT_APP_FIREBASE_AUTH_DOMAIN,\n  databaseURL: process.env.REACT_APP_FIREBASE_DATABASE_URL,\n  projectId: process.env.REACT_APP_FIREBASE_PROJECT_ID,\n  storageBucket: process.env.REACT_APP_FIREBASE_STORAGE_BUCKET,\n  messagingSenderId: process.env.REACT_APP_FIREBASE_MESSAGING_SENDER_ID,\n  appId: process.env.REACT_APP_FIREBASE_APP_ID,\n  measurementId: process.env.REACT_APP_FIREBASE_MEASUREMENT_ID\n});\n\nexport default firebase;\nexport const analytics = firebase.analytics();\nexport const auth = firebase.auth();\nexport const firestore = firebase.firestore();\nexport const storage = firebase.storage();\nexport const performance = firebase.performance();\n","import firebase, { analytics, auth, firestore, storage } from \"../firebase\";\n\nimport moment from \"moment\";\n\nconst authentication = {};\n\nauthentication.signUp = fields => {\n  return new Promise((resolve, reject) => {\n    if (!fields) {\n      reject();\n\n      return;\n    }\n\n    const firstName = fields.firstName;\n    const lastName = fields.lastName;\n    const username = fields.username;\n    const emailAddress = fields.emailAddress;\n    const password = fields.password;\n\n    if (!firstName || !lastName || !username || !emailAddress || !password) {\n      reject();\n\n      return;\n    }\n\n    if (auth.currentUser) {\n      reject();\n\n      return;\n    }\n\n    auth\n      .createUserWithEmailAndPassword(emailAddress, password)\n      .then(value => {\n        const user = value.user;\n\n        if (!user) {\n          reject();\n\n          return;\n        }\n\n        const uid = user.uid;\n\n        if (!uid) {\n          reject();\n\n          return;\n        }\n\n        const userDocumentReference = firestore.collection(\"users\").doc(uid);\n\n        userDocumentReference\n          .set({\n            firstName: firstName,\n            lastName: lastName,\n            username: username\n          })\n          .then(value => {\n            analytics.logEvent(\"sign_up\", {\n              method: \"password\"\n            });\n\n            resolve(value);\n          })\n          .catch(reason => {\n            reject(reason);\n          });\n      })\n      .catch(reason => {\n        reject(reason);\n      });\n  });\n};\n\nauthentication.signUpWithEmailAddressAndPassword = (emailAddress, password) => {\n  return new Promise((resolve, reject) => {\n    if (!emailAddress || !password) {\n      reject();\n\n      return;\n    }\n\n    if (auth.currentUser) {\n      reject();\n\n      return;\n    }\n\n    auth\n      .createUserWithEmailAndPassword(emailAddress, password)\n      .then(value => {\n        const user = value.user;\n\n        if (!user) {\n          reject();\n\n          return;\n        }\n\n        const uid = user.uid;\n\n        if (!uid) {\n          reject();\n\n          return;\n        }\n\n        const userDocumentReference = firestore.collection(\"users\").doc(uid);\n\n        userDocumentReference\n          .set({}, { merge: true })\n          .then(value => {\n            analytics.logEvent(\"sign_up\", {\n              method: \"password\"\n            });\n\n            resolve(value);\n          })\n          .catch(reason => {\n            reject(reason);\n          });\n      })\n      .catch(reason => {\n        reject(reason);\n      });\n  });\n};\n\nauthentication.signIn = (emailAddress, password) => {\n  return new Promise((resolve, reject) => {\n    if (!emailAddress || !password) {\n      reject();\n\n      return;\n    }\n\n    if (auth.currentUser) {\n      reject();\n\n      return;\n    }\n\n    auth\n      .signInWithEmailAndPassword(emailAddress, password)\n      .then(value => {\n        const user = value.user;\n\n        if (!user) {\n          reject();\n\n          return;\n        }\n\n        const uid = user.uid;\n\n        if (!uid) {\n          reject();\n\n          return;\n        }\n\n        const userDocumentReference = firestore.collection(\"users\").doc(uid);\n\n        userDocumentReference\n          .get({ source: \"server\" })\n          .then(value => {\n            if (value.exists) {\n              analytics.logEvent(\"login\", {\n                method: \"password\"\n              });\n\n              resolve(user);\n            } else {\n              userDocumentReference\n                .set({}, { merge: true })\n                .then(value => {\n                  analytics.logEvent(\"login\", {\n                    method: \"password\"\n                  });\n\n                  resolve(user);\n                })\n                .catch(reason => {\n                  reject(reason);\n                });\n            }\n          })\n          .catch(reason => {\n            reject(reason);\n          });\n      })\n      .catch(reason => {\n        reject(reason);\n      });\n  });\n};\n\nauthentication.sendSignInLinkToEmail = emailAddress => {\n  return new Promise((resolve, reject) => {\n    if (!emailAddress) {\n      reject();\n\n      return;\n    }\n\n    if (auth.currentUser) {\n      reject();\n\n      return;\n    }\n\n    const actionCodeSettings = {\n      url: process.env.REACT_APP_HOMEPAGE,\n      handleCodeInApp: true\n    };\n\n    auth\n      .sendSignInLinkToEmail(emailAddress, actionCodeSettings)\n      .then(value => {\n        analytics.logEvent(\"send_sign_in_link_to_email\");\n\n        localStorage.setItem(\"emailAddress\", emailAddress);\n\n        resolve(value);\n      })\n      .catch(reason => {\n        reject(reason);\n      });\n  });\n};\n\nauthentication.signInWithEmailLink = (emailAddress, emailLink) => {\n  return new Promise((resolve, reject) => {\n    if (!emailAddress || !emailLink) {\n      reject();\n\n      return;\n    }\n\n    if (auth.currentUser) {\n      reject();\n\n      return;\n    }\n\n    auth\n      .signInWithEmailLink(emailAddress, emailLink)\n      .then(value => {\n        analytics.logEvent(\"login\", {\n          method: \"email-link\"\n        });\n\n        localStorage.removeItem(\"emailAddress\");\n\n        resolve(value);\n      })\n      .catch(reason => {\n        reject(reason);\n      });\n  });\n};\n\nauthentication.signInWithAuthProvider = providerId => {\n  return new Promise((resolve, reject) => {\n    if (!providerId) {\n      reject();\n\n      return;\n    }\n\n    const provider = new firebase.auth.OAuthProvider(providerId);\n\n    if (!provider) {\n      reject();\n\n      return;\n    }\n\n    if (auth.currentUser) {\n      reject();\n\n      return;\n    }\n\n    auth\n      .signInWithPopup(provider)\n      .then(value => {\n        const user = value.user;\n\n        if (!user) {\n          reject();\n\n          return;\n        }\n\n        const uid = user.uid;\n\n        if (!uid) {\n          reject();\n\n          return;\n        }\n\n        const userDocumentReference = firestore.collection(\"users\").doc(uid);\n\n        userDocumentReference\n          .get({ source: \"server\" })\n          .then(value => {\n            if (value.exists) {\n              analytics.logEvent(\"login\", {\n                method: providerId\n              });\n\n              resolve(user);\n            } else {\n              userDocumentReference\n                .set({}, { merge: true })\n                .then(value => {\n                  analytics.logEvent(\"login\", {\n                    method: providerId\n                  });\n\n                  resolve(user);\n                })\n                .catch(reason => {\n                  reject(reason);\n                });\n            }\n          })\n          .catch(reason => {\n            reject(reason);\n          });\n      })\n      .catch(reason => {\n        reject(reason);\n      });\n  });\n};\n\nauthentication.linkAuthProvider = providerId => {\n  return new Promise((resolve, reject) => {\n    if (!providerId) {\n      reject();\n\n      return;\n    }\n\n    const provider = new firebase.auth.OAuthProvider(providerId);\n\n    if (!provider) {\n      reject();\n\n      return;\n    }\n\n    const currentUser = auth.currentUser;\n\n    if (!currentUser) {\n      reject();\n\n      return;\n    }\n\n    currentUser\n      .linkWithPopup(provider)\n      .then(value => {\n        analytics.logEvent(\"link_auth_provider\", {\n          providerId: providerId\n        });\n\n        resolve(value);\n      })\n      .catch(reason => {\n        reject(reason);\n      });\n  });\n};\n\nauthentication.unlinkAuthProvider = providerId => {\n  return new Promise((resolve, reject) => {\n    if (!providerId) {\n      reject();\n\n      return;\n    }\n\n    const currentUser = auth.currentUser;\n\n    if (!currentUser) {\n      reject();\n\n      return;\n    }\n\n    currentUser\n      .unlink(providerId)\n      .then(value => {\n        analytics.logEvent(\"unlink_auth_provider\", {\n          providerId: providerId\n        });\n\n        resolve(value);\n      })\n      .catch(reason => {\n        reject(reason);\n      });\n  });\n};\n\nauthentication.authProviderData = providerId => {\n  if (!providerId) {\n    return;\n  }\n\n  const currentUser = auth.currentUser;\n\n  if (!currentUser) {\n    return;\n  }\n\n  const providerData = currentUser.providerData;\n\n  if (!providerData) {\n    return;\n  }\n\n  return providerData.find(\n    authProvider => authProvider.providerId === providerId\n  );\n};\n\nauthentication.signOut = () => {\n  return new Promise((resolve, reject) => {\n    const currentUser = auth.currentUser;\n\n    if (!currentUser) {\n      reject();\n\n      return;\n    }\n\n    auth\n      .signOut()\n      .then(value => {\n        analytics.logEvent(\"sign_out\");\n\n        resolve(value);\n      })\n      .catch(reason => {\n        reject(reason);\n      });\n  });\n};\n\nauthentication.resetPassword = emailAddress => {\n  return new Promise((resolve, reject) => {\n    if (!emailAddress) {\n      reject();\n\n      return;\n    }\n\n    if (auth.currentUser) {\n      reject();\n\n      return;\n    }\n\n    auth\n      .sendPasswordResetEmail(emailAddress)\n      .then(value => {\n        analytics.logEvent(\"reset_password\");\n\n        resolve(value);\n      })\n      .catch(reason => {\n        reject(reason);\n      });\n  });\n};\n\nauthentication.changeAvatar = avatar => {\n  return new Promise((resolve, reject) => {\n    if (!avatar) {\n      reject();\n\n      return;\n    }\n\n    const avatarFileTypes = [\n      \"image/gif\",\n      \"image/jpeg\",\n      \"image/png\",\n      \"image/webp\",\n      \"image/svg+xml\"\n    ];\n\n    if (!avatarFileTypes.includes(avatar.type)) {\n      reject();\n\n      return;\n    }\n\n    if (avatar.size > 20 * 1024 * 1024) {\n      reject();\n\n      return;\n    }\n\n    const currentUser = auth.currentUser;\n\n    if (!currentUser) {\n      reject();\n\n      return;\n    }\n\n    const uid = currentUser.uid;\n\n    if (!uid) {\n      reject();\n\n      return;\n    }\n\n    const avatarReference = storage\n      .ref()\n      .child(\"images\")\n      .child(\"avatars\")\n      .child(uid);\n\n    avatarReference\n      .put(avatar)\n      .then(uploadTaskSnapshot => {\n        avatarReference\n          .getDownloadURL()\n          .then(value => {\n            currentUser\n              .updateProfile({\n                photoURL: value\n              })\n              .then(value => {\n                analytics.logEvent(\"change_avatar\");\n\n                resolve(value);\n              })\n              .catch(reason => {\n                reject(reason);\n              });\n          })\n          .catch(reason => {\n            reject(reason);\n          });\n      })\n      .catch(reason => {\n        reject(reason);\n      });\n  });\n};\n\nauthentication.removeAvatar = () => {\n  return new Promise((resolve, reject) => {\n    const currentUser = auth.currentUser;\n\n    if (!currentUser) {\n      reject();\n\n      return;\n    }\n\n    const uid = currentUser.uid;\n\n    if (!uid) {\n      reject();\n\n      return;\n    }\n\n    currentUser\n      .updateProfile({\n        photoURL: null\n      })\n      .then(value => {\n        const avatarReference = storage\n          .ref()\n          .child(\"images\")\n          .child(\"avatars\")\n          .child(uid);\n\n        avatarReference\n          .delete()\n          .then(value => {\n            analytics.logEvent(\"remove_avatar\");\n\n            resolve(value);\n          })\n          .catch(reason => {\n            reject(reason);\n          });\n      })\n      .catch(reason => {\n        reject(reason);\n      });\n  });\n};\n\nauthentication.changeFirstName = firstName => {\n  return new Promise((resolve, reject) => {\n    if (!firstName) {\n      reject();\n\n      return;\n    }\n\n    const currentUser = auth.currentUser;\n\n    if (!currentUser) {\n      reject();\n\n      return;\n    }\n\n    const uid = currentUser.uid;\n\n    if (!uid) {\n      reject();\n\n      return;\n    }\n\n    const userDocumentReference = firestore.collection(\"users\").doc(uid);\n\n    userDocumentReference\n      .update({\n        firstName: firstName\n      })\n      .then(value => {\n        analytics.logEvent(\"change_first_name\");\n\n        resolve(value);\n      })\n      .catch(reason => {\n        reject(reason);\n      });\n  });\n};\n\nauthentication.changeLastName = lastName => {\n  return new Promise((resolve, reject) => {\n    if (!lastName) {\n      reject();\n\n      return;\n    }\n\n    const currentUser = auth.currentUser;\n\n    if (!currentUser) {\n      reject();\n\n      return;\n    }\n\n    const uid = currentUser.uid;\n\n    if (!uid) {\n      reject();\n\n      return;\n    }\n\n    const userDocumentReference = firestore.collection(\"users\").doc(uid);\n\n    userDocumentReference\n      .update({\n        lastName: lastName\n      })\n      .then(value => {\n        analytics.logEvent(\"change_last_name\");\n\n        resolve(value);\n      })\n      .catch(reason => {\n        reject(reason);\n      });\n  });\n};\n\nauthentication.changeUsername = username => {\n  return new Promise((resolve, reject) => {\n    if (!username) {\n      reject();\n\n      return;\n    }\n\n    const currentUser = auth.currentUser;\n\n    if (!currentUser) {\n      reject();\n\n      return;\n    }\n\n    const uid = currentUser.uid;\n\n    if (!uid) {\n      reject();\n\n      return;\n    }\n\n    const userDocumentReference = firestore.collection(\"users\").doc(uid);\n\n    userDocumentReference\n      .update({\n        username: username\n      })\n      .then(value => {\n        analytics.logEvent(\"change_username\");\n\n        resolve(value);\n      })\n      .catch(reason => {\n        reject(reason);\n      });\n  });\n};\n\nauthentication.changeEmailAddress = emailAddress => {\n  return new Promise((resolve, reject) => {\n    if (!emailAddress) {\n      reject();\n\n      return;\n    }\n\n    const currentUser = auth.currentUser;\n\n    if (!currentUser) {\n      reject();\n\n      return;\n    }\n\n    const uid = currentUser.uid;\n\n    if (!uid) {\n      reject();\n\n      return;\n    }\n\n    currentUser\n      .updateEmail(emailAddress)\n      .then(value => {\n        analytics.logEvent(\"change_email_address\");\n\n        resolve(value);\n      })\n      .catch(reason => {\n        reject(reason);\n      });\n  });\n};\n\nauthentication.changePassword = password => {\n  return new Promise((resolve, reject) => {\n    if (!password) {\n      reject();\n\n      return;\n    }\n\n    const currentUser = auth.currentUser;\n\n    if (!currentUser) {\n      reject();\n\n      return;\n    }\n\n    const uid = currentUser.uid;\n\n    if (!uid) {\n      reject();\n\n      return;\n    }\n\n    currentUser\n      .updatePassword(password)\n      .then(value => {\n        const userDocumentReference = firestore.collection(\"users\").doc(uid);\n\n        userDocumentReference\n          .update({\n            lastPasswordChange: firebase.firestore.FieldValue.serverTimestamp()\n          })\n          .then(value => {\n            analytics.logEvent(\"change_password\");\n\n            resolve(value);\n          })\n          .catch(reason => {\n            reject(reason);\n          });\n      })\n      .catch(reason => {\n        reject(reason);\n      });\n  });\n};\n\nauthentication.verifyEmailAddress = () => {\n  return new Promise((resolve, reject) => {\n    const currentUser = auth.currentUser;\n\n    if (!currentUser) {\n      reject();\n\n      return;\n    }\n\n    currentUser\n      .sendEmailVerification()\n      .then(value => {\n        analytics.logEvent(\"verify_email_address\");\n\n        resolve(value);\n      })\n      .catch(reason => {\n        reject(reason);\n      });\n  });\n};\n\nauthentication.deleteAccount = () => {\n  return new Promise((resolve, reject) => {\n    const currentUser = auth.currentUser;\n\n    if (!currentUser) {\n      reject();\n\n      return;\n    }\n\n    currentUser\n      .delete()\n      .then(value => {\n        analytics.logEvent(\"delete_account\");\n\n        resolve(value);\n      })\n      .catch(reason => {\n        reject(reason);\n      });\n  });\n};\n\nauthentication.getRoles = () => {\n  return new Promise((resolve, reject) => {\n    const currentUser = auth.currentUser;\n\n    if (!currentUser) {\n      reject();\n\n      return;\n    }\n\n    currentUser\n      .getIdTokenResult()\n      .then(idTokenResult => {\n        resolve(idTokenResult.claims.roles);\n      })\n      .catch(reason => {\n        reject(reason);\n      });\n  });\n};\n\nauthentication.isAdmin = () => {\n  return new Promise((resolve, reject) => {\n    authentication\n      .getRoles()\n      .then(value => {\n        resolve(value.includes(\"admin\"));\n      })\n      .catch(reason => {\n        reject(reason);\n      });\n  });\n};\n\nauthentication.isPremium = () => {\n  return new Promise((resolve, reject) => {\n    authentication\n      .getRoles()\n      .then(value => {\n        resolve(value.includes(\"premium\"));\n      })\n      .catch(reason => {\n        reject(reason);\n      });\n  });\n};\n\nauthentication.getName = fields => {\n  if (!fields) {\n    return null;\n  }\n\n  const firstName = fields.firstName;\n  const username = fields.username;\n  const displayName = fields.displayName;\n  const lastName = fields.lastName;\n\n  if (firstName) {\n    return firstName;\n  }\n\n  if (username) {\n    return username;\n  }\n\n  if (displayName) {\n    return displayName;\n  }\n\n  if (lastName) {\n    return lastName;\n  }\n\n  return null;\n};\n\nauthentication.getFullName = fields => {\n  if (!fields) {\n    return null;\n  }\n\n  const firstName = fields.firstName;\n  const lastName = fields.lastName;\n  const displayName = fields.displayName;\n\n  if (firstName && lastName) {\n    return `${firstName} ${lastName}`;\n  }\n\n  if (displayName) {\n    return displayName;\n  }\n\n  return null;\n};\n\nauthentication.getNameInitials = fields => {\n  if (!fields) {\n    return null;\n  }\n\n  const firstName = fields.firstName;\n  const lastName = fields.lastName;\n  const username = fields.username;\n  const displayName = fields.displayName;\n\n  if (firstName && lastName) {\n    return firstName.charAt(0) + lastName.charAt(0);\n  }\n\n  if (firstName) {\n    return firstName.charAt(0);\n  }\n\n  if (username) {\n    return username.charAt(0);\n  }\n\n  if (lastName) {\n    return lastName.charAt(0);\n  }\n\n  if (displayName) {\n    return displayName.charAt(0);\n  }\n\n  return null;\n};\n\nauthentication.getProfileCompletion = fields => {\n  if (!fields) {\n    return null;\n  }\n\n  fields = [\n    fields.photoURL,\n    fields.firstName,\n    fields.lastName,\n    fields.username,\n    fields.email,\n    fields.email && fields.emailVerified\n  ];\n\n  if (!fields) {\n    return null;\n  }\n\n  let profileCompletion = 0;\n\n  fields.forEach(field => {\n    if (field) {\n      profileCompletion += 100 / fields.length;\n    }\n  });\n\n  return Math.floor(profileCompletion);\n};\n\nauthentication.getSecurityRating = (user, userData) => {\n  if (!user || !user.metadata) {\n    return null;\n  }\n\n  let creationTime = user.metadata.creationTime;\n\n  if (!creationTime) {\n    return null;\n  }\n\n  creationTime = moment(creationTime);\n\n  let securityRating = 0;\n\n  if (userData && userData.lastPasswordChange) {\n    let lastPasswordChange = userData.lastPasswordChange;\n\n    if (lastPasswordChange) {\n      lastPasswordChange = moment(lastPasswordChange.toDate());\n\n      if (creationTime.diff(lastPasswordChange, \"days\") >= 365.242199) {\n        securityRating = 50;\n      } else {\n        securityRating = 100;\n      }\n    }\n  } else {\n    if (moment().diff(creationTime, \"days\") >= 365.242199) {\n      securityRating = 50;\n    } else {\n      securityRating = 100;\n    }\n  }\n\n  return securityRating;\n};\n\nexport default authentication;\n","import camelCase from \"lodash.camelcase\";\n\nimport { createMuiTheme } from \"@material-ui/core/styles\";\n\nimport red from \"@material-ui/core/colors/red\";\nimport pink from \"@material-ui/core/colors/pink\";\nimport purple from \"@material-ui/core/colors/purple\";\nimport deepPurple from \"@material-ui/core/colors/deepPurple\";\nimport indigo from \"@material-ui/core/colors/indigo\";\nimport blue from \"@material-ui/core/colors/blue\";\nimport lightBlue from \"@material-ui/core/colors/lightBlue\";\nimport cyan from \"@material-ui/core/colors/cyan\";\nimport teal from \"@material-ui/core/colors/teal\";\nimport green from \"@material-ui/core/colors/green\";\nimport lightGreen from \"@material-ui/core/colors/lightGreen\";\nimport lime from \"@material-ui/core/colors/lime\";\nimport yellow from \"@material-ui/core/colors/yellow\";\nimport amber from \"@material-ui/core/colors/amber\";\nimport orange from \"@material-ui/core/colors/orange\";\nimport deepOrange from \"@material-ui/core/colors/deepOrange\";\nimport brown from \"@material-ui/core/colors/brown\";\nimport gray from \"@material-ui/core/colors/grey\";\nimport blueGray from \"@material-ui/core/colors/blueGrey\";\n\nimport firebase, { analytics, auth, firestore } from \"../firebase\";\n\nconst colors = {\n  red: {\n    id: \"red\",\n    name: \"Red\",\n    import: red\n  },\n\n  pink: {\n    id: \"pink\",\n    name: \"Pink\",\n    import: pink\n  },\n\n  purple: {\n    id: \"purple\",\n    name: \"Purple\",\n    import: purple\n  },\n\n  deepPurple: {\n    id: \"deep-purple\",\n    name: \"Deep Purple\",\n    import: deepPurple\n  },\n\n  indigo: {\n    id: \"indigo\",\n    name: \"Indigo\",\n    import: indigo\n  },\n\n  blue: {\n    id: \"blue\",\n    name: \"Blue\",\n    import: blue\n  },\n\n  lightBlue: {\n    id: \"light-blue\",\n    name: \"Light Blue\",\n    import: lightBlue\n  },\n\n  cyan: {\n    id: \"cyan\",\n    name: \"Cyan\",\n    import: cyan\n  },\n\n  teal: {\n    id: \"teal\",\n    name: \"Teal\",\n    import: teal\n  },\n\n  green: {\n    id: \"green\",\n    name: \"Green\",\n    import: green\n  },\n\n  lightGreen: {\n    id: \"light-green\",\n    name: \"Light Green\",\n    import: lightGreen\n  },\n\n  lime: {\n    id: \"lime\",\n    name: \"Lime\",\n    import: lime\n  },\n\n  yellow: {\n    id: \"yellow\",\n    name: \"Yellow\",\n    import: yellow\n  },\n\n  amber: {\n    id: \"amber\",\n    name: \"Amber\",\n    import: amber\n  },\n\n  orange: {\n    id: \"orange\",\n    name: \"Orange\",\n    import: orange\n  },\n\n  deepOrange: {\n    id: \"deep-orange\",\n    name: \"Deep Orange\",\n    import: deepOrange\n  },\n\n  brown: {\n    id: \"brown\",\n    name: \"Brown\",\n    import: brown\n  },\n\n  gray: {\n    id: \"gray\",\n    name: \"Gray\",\n    import: gray\n  },\n\n  blueGray: {\n    id: \"blue-gray\",\n    name: \"Blue Gray\",\n    import: blueGray\n  }\n};\n\nconst getColor = colorId => {\n  if (!colorId) {\n    return null;\n  }\n\n  colorId = camelCase(colorId);\n\n  return colors[colorId];\n};\n\nconst defaultPrimaryColor = getColor(process.env.REACT_APP_THEME_PRIMARY_COLOR);\nconst defaultSecondaryColor = getColor(\n  process.env.REACT_APP_THEME_SECONDARY_COLOR\n);\nconst defaultDark = process.env.REACT_APP_THEME_DARK === \"true\";\n\nconst defaultTheme = createMuiTheme({\n  palette: {\n    primary: defaultPrimaryColor.import,\n    secondary: defaultSecondaryColor.import,\n    type: defaultDark ? \"dark\" : \"light\"\n  },\n\n  primaryColor: defaultPrimaryColor,\n  secondaryColor: defaultSecondaryColor,\n  dark: defaultDark\n});\n\nconst appearance = {};\n\nappearance.colors = colors;\n\nappearance.defaultPrimaryColor = defaultPrimaryColor;\nappearance.defaultSecondaryColor = defaultSecondaryColor;\nappearance.defaultDark = defaultDark;\n\nappearance.defaultTheme = defaultTheme;\n\nappearance.isDefaultTheme = theme => {\n  if (!theme) {\n    return false;\n  }\n\n  if (\n    theme.primaryColor.id === defaultPrimaryColor.id &&\n    theme.secondaryColor.id === defaultSecondaryColor.id &&\n    theme.dark === defaultDark\n  ) {\n    return true;\n  }\n\n  return false;\n};\n\nappearance.createTheme = theme => {\n  if (!theme) {\n    return null;\n  }\n\n  let primaryColor = theme.primaryColor;\n  let secondaryColor = theme.secondaryColor;\n  let dark = theme.dark;\n\n  if (!primaryColor || !secondaryColor) {\n    return null;\n  }\n\n  primaryColor = getColor(primaryColor);\n  secondaryColor = getColor(secondaryColor);\n\n  if (!primaryColor || !secondaryColor) {\n    return null;\n  }\n\n  theme = createMuiTheme({\n    palette: {\n      primary: primaryColor.import,\n      secondary: secondaryColor.import,\n      type: dark ? \"dark\" : \"light\"\n    },\n\n    primaryColor: primaryColor,\n    secondaryColor: secondaryColor,\n    dark: dark\n  });\n\n  return theme;\n};\n\nappearance.changeTheme = theme => {\n  return new Promise((resolve, reject) => {\n    if (!theme) {\n      reject();\n\n      return;\n    }\n\n    let primaryColor = theme.primaryColor;\n    let secondaryColor = theme.secondaryColor;\n    let dark = theme.dark;\n\n    if (!primaryColor || !secondaryColor) {\n      reject();\n\n      return;\n    }\n\n    primaryColor = getColor(primaryColor);\n    secondaryColor = getColor(secondaryColor);\n\n    if (!primaryColor || !secondaryColor) {\n      reject();\n\n      return;\n    }\n\n    const currentUser = auth.currentUser;\n\n    if (!currentUser) {\n      reject();\n\n      return;\n    }\n\n    const uid = currentUser.uid;\n\n    if (!uid) {\n      reject();\n\n      return;\n    }\n\n    const userDocumentReference = firestore.collection(\"users\").doc(uid);\n\n    userDocumentReference\n      .update({\n        theme: {\n          primaryColor: primaryColor.id,\n          secondaryColor: secondaryColor.id,\n          dark: dark\n        }\n      })\n      .then(value => {\n        analytics.logEvent(\"change_theme\", {\n          theme: theme\n        });\n\n        resolve(value);\n      })\n      .catch(reason => {\n        reject(reason);\n      });\n  });\n};\n\nappearance.changePrimaryColor = primaryColor => {\n  return new Promise((resolve, reject) => {\n    if (!primaryColor) {\n      reject();\n\n      return;\n    }\n\n    primaryColor = getColor(primaryColor);\n\n    if (!primaryColor) {\n      reject();\n\n      return;\n    }\n\n    const currentUser = auth.currentUser;\n\n    if (!currentUser) {\n      reject();\n\n      return;\n    }\n\n    const uid = currentUser.uid;\n\n    if (!uid) {\n      reject();\n\n      return;\n    }\n\n    const userDocumentReference = firestore.collection(\"users\").doc(uid);\n\n    userDocumentReference\n      .update({\n        \"theme.primaryColor\": primaryColor.id\n      })\n      .then(value => {\n        analytics.logEvent(\"change_primary_color\", {\n          primaryColor: primaryColor.id\n        });\n\n        resolve(value);\n      })\n      .catch(reason => {\n        reject(reason);\n      });\n  });\n};\n\nappearance.changeSecondaryColor = secondaryColor => {\n  return new Promise((resolve, reject) => {\n    if (!secondaryColor) {\n      reject();\n\n      return;\n    }\n\n    secondaryColor = getColor(secondaryColor);\n\n    if (!secondaryColor) {\n      reject();\n\n      return;\n    }\n\n    const currentUser = auth.currentUser;\n\n    if (!currentUser) {\n      reject();\n\n      return;\n    }\n\n    const uid = currentUser.uid;\n\n    if (!uid) {\n      reject();\n\n      return;\n    }\n\n    const userDocumentReference = firestore.collection(\"users\").doc(uid);\n\n    userDocumentReference\n      .update({\n        \"theme.secondaryColor\": secondaryColor.id\n      })\n      .then(value => {\n        analytics.logEvent(\"change_secondary_color\", {\n          secondaryColor: secondaryColor.id\n        });\n\n        resolve(value);\n      })\n      .catch(reason => {\n        reject(reason);\n      });\n  });\n};\n\nappearance.changeDark = dark => {\n  return new Promise((resolve, reject) => {\n    const currentUser = auth.currentUser;\n\n    if (!currentUser) {\n      reject();\n\n      return;\n    }\n\n    const uid = currentUser.uid;\n\n    if (!uid) {\n      reject();\n\n      return;\n    }\n\n    const userDocumentReference = firestore.collection(\"users\").doc(uid);\n\n    userDocumentReference\n      .update({\n        \"theme.dark\": dark\n      })\n      .then(value => {\n        analytics.logEvent(\"change_dark\", {\n          dark: dark\n        });\n\n        resolve(value);\n      })\n      .catch(reason => {\n        reject(reason);\n      });\n  });\n};\n\nappearance.changeSyncAppearance = syncAppearance => {\n  return new Promise((resolve, reject) => {\n    const currentUser = auth.currentUser;\n\n    if (!currentUser) {\n      reject();\n\n      return;\n    }\n\n    const uid = currentUser.uid;\n\n    if (!uid) {\n      reject();\n\n      return;\n    }\n\n    const userDocumentReference = firestore.collection(\"users\").doc(uid);\n\n    userDocumentReference\n      .update({\n        \"theme.syncAppearance\": syncAppearance\n      })\n      .then(value => {\n        analytics.logEvent(\"change_sync_appearance\", {\n          syncAppearance: syncAppearance\n        });\n\n        resolve(value);\n      })\n      .catch(reason => {\n        reject(reason);\n      });\n  });\n};\n\nappearance.resetTheme = () => {\n  return new Promise((resolve, reject) => {\n    const currentUser = auth.currentUser;\n\n    if (!currentUser) {\n      reject();\n\n      return;\n    }\n\n    const uid = currentUser.uid;\n\n    if (!uid) {\n      reject();\n\n      return;\n    }\n\n    const userDocumentReference = firestore.collection(\"users\").doc(uid);\n\n    userDocumentReference\n      .update({\n        theme: firebase.firestore.FieldValue.delete()\n      })\n      .then(value => {\n        analytics.logEvent(\"reset_theme\");\n\n        resolve(value);\n      })\n      .catch(reason => {\n        reject(reason);\n      });\n  });\n};\n\nexport default appearance;\n","import React, { Component } from \"react\";\n\nimport PropTypes from \"prop-types\";\n\nimport Box from \"@material-ui/core/Box\";\nimport Typography from \"@material-ui/core/Typography\";\n\nclass EmptyState extends Component {\n  render() {\n    // Properties\n    const { type, size, padding, icon, title, description } = this.props;\n\n    let fontSize;\n    let variant;\n\n    if (size === \"small\") {\n      fontSize = \"h3.fontSize\";\n      variant = \"h6\";\n    } else if (size === \"medium\") {\n      fontSize = \"h2.fontSize\";\n      variant = \"h5\";\n    } else if (size === \"big\") {\n      fontSize = \"h1.fontSize\";\n      variant = \"h4\";\n    }\n\n    if (type === \"content\") {\n      return (\n        <Box\n          style={{ transform: \"translate(-50%, -50%)\" }}\n          position=\"absolute\"\n          top=\"50%\"\n          left=\"50%\"\n          textAlign=\"center\"\n        >\n          {icon && (\n            <Box clone color=\"text.secondary\" fontSize={fontSize}>\n              {icon}\n            </Box>\n          )}\n\n          {title && (\n            <Typography color=\"textSecondary\" variant={variant}>\n              {title}\n            </Typography>\n          )}\n\n          {description && (\n            <Typography color=\"textSecondary\" variant=\"body1\">\n              {description}\n            </Typography>\n          )}\n        </Box>\n      );\n    }\n\n    if (type === \"card\") {\n      return (\n        <Box padding={padding} textAlign=\"center\">\n          {icon && (\n            <Box clone color=\"text.secondary\" fontSize={fontSize}>\n              {icon}\n            </Box>\n          )}\n\n          {title && (\n            <Typography color=\"textSecondary\" variant={variant}>\n              {title}\n            </Typography>\n          )}\n\n          {description && (\n            <Typography color=\"textSecondary\" variant=\"body1\">\n              {description}\n            </Typography>\n          )}\n        </Box>\n      );\n    }\n\n    return null;\n  }\n}\n\nEmptyState.defaultProps = {\n  type: \"content\",\n  size: \"medium\",\n  padding: 2\n};\n\nEmptyState.propTypes = {\n  // Properties\n  type: PropTypes.string.isRequired,\n  size: PropTypes.string,\n  padding: PropTypes.number,\n  icon: PropTypes.element,\n  title: PropTypes.string,\n  description: PropTypes.string\n};\n\nexport default EmptyState;\n","import React, { Component } from \"react\";\n\nimport PropTypes from \"prop-types\";\n\nimport * as Sentry from \"@sentry/browser\";\n\nimport ErrorIcon from \"@material-ui/icons/Error\";\n\nimport EmptyState from \"../EmptyState\";\n\nclass ErrorBoundary extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      hasError: false,\n      eventId: null\n    };\n  }\n\n  static getDerivedStateFromError(error) {\n    return { hasError: true };\n  }\n\n  componentDidCatch(error, errorInfo) {\n    Sentry.withScope(scope => {\n      scope.setExtras(errorInfo);\n\n      const eventId = Sentry.captureException(error);\n\n      this.setState({\n        eventId: eventId\n      });\n    });\n  }\n\n  render() {\n    // Properties\n    const { children } = this.props;\n\n    const { hasError } = this.state;\n\n    if (hasError) {\n      return <EmptyState icon={<ErrorIcon />} title=\"Something went wrong\" />;\n    }\n\n    return children;\n  }\n}\n\nErrorBoundary.propTypes = {\n  // Properties\n  children: PropTypes.array.isRequired\n};\n\nexport default ErrorBoundary;\n","import React, { Component } from \"react\";\n\nimport PropTypes from \"prop-types\";\n\nimport { withStyles } from \"@material-ui/core/styles\";\n\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\n\nconst styles = theme => ({\n  center: {\n    position: \"absolute\",\n    top: \"50%\",\n    left: \"50%\",\n    transform: \"translate(-50%, -50%)\",\n    textAlign: \"center\"\n  }\n});\n\nclass LaunchScreen extends Component {\n  render() {\n    // Styling\n    const { classes } = this.props;\n\n    return (\n      <div className={classes.center}>\n        <CircularProgress />\n      </div>\n    );\n  }\n}\n\nLaunchScreen.propTypes = {\n  // Styling\n  classes: PropTypes.object.isRequired\n};\n\nexport default withStyles(styles)(LaunchScreen);\n","import React, { Component } from \"react\";\n\nimport PropTypes from \"prop-types\";\n\nimport { withStyles } from \"@material-ui/core/styles\";\n\nimport Avatar from \"@material-ui/core/Avatar\";\n\nimport ListItemAvatar from \"@material-ui/core/ListItemAvatar\";\n\nimport AccountCircleIcon from \"@material-ui/icons/AccountCircle\";\nimport PersonIcon from \"@material-ui/icons/Person\";\n\nimport authentication from \"../../services/authentication\";\n\nconst styles = theme => ({\n  nameInitials: {\n    cursor: \"default\"\n  }\n});\n\nclass UserAvatar extends Component {\n  render() {\n    // Styling\n    const { classes } = this.props;\n\n    // Properties\n    const { context, user, defaultCursor } = this.props;\n\n    if (context === \"standalone\") {\n      if (!user) {\n        return <AccountCircleIcon />;\n      }\n\n      const photoUrl = user.photoURL;\n\n      if (photoUrl) {\n        return <Avatar alt=\"Avatar\" src={photoUrl} />;\n      }\n\n      const nameInitials = authentication.getNameInitials({\n        ...user\n      });\n\n      if (nameInitials) {\n        return (\n          <Avatar alt=\"Avatar\">\n            <span className={defaultCursor && classes.nameInitials}>\n              {nameInitials}\n            </span>\n          </Avatar>\n        );\n      }\n\n      return <AccountCircleIcon />;\n    }\n\n    if (context === \"list\") {\n      if (!user) {\n        return (\n          <ListItemAvatar>\n            <Avatar>\n              <PersonIcon />\n            </Avatar>\n          </ListItemAvatar>\n        );\n      }\n\n      const photoUrl = user.photoURL;\n\n      if (photoUrl) {\n        return (\n          <ListItemAvatar>\n            <Avatar alt=\"Avatar\" src={photoUrl} />\n          </ListItemAvatar>\n        );\n      }\n\n      const nameInitials = authentication.getNameInitials({\n        ...user\n      });\n\n      if (nameInitials) {\n        return (\n          <ListItemAvatar>\n            <Avatar alt=\"Avatar\">\n              <span className={defaultCursor && classes.nameInitials}>\n                {nameInitials}\n              </span>\n            </Avatar>\n          </ListItemAvatar>\n        );\n      }\n\n      return (\n        <ListItemAvatar>\n          <Avatar>\n            <PersonIcon />\n          </Avatar>\n        </ListItemAvatar>\n      );\n    }\n\n    return null;\n  }\n}\n\nUserAvatar.defaultProps = {\n  context: \"standalone\"\n};\n\nUserAvatar.propTypes = {\n  // Styling\n  classes: PropTypes.object.isRequired,\n\n  // Properties\n  context: PropTypes.string,\n  user: PropTypes.object.isRequired,\n  defaultCursor: PropTypes.bool\n};\n\nexport default withStyles(styles)(UserAvatar);\n","import React, { Component } from \"react\";\n\nimport PropTypes from \"prop-types\";\n\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Box from \"@material-ui/core/Box\";\nimport ButtonGroup from \"@material-ui/core/ButtonGroup\";\nimport Button from \"@material-ui/core/Button\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Divider from \"@material-ui/core/Divider\";\n\nimport Menu from \"@material-ui/core/Menu\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\n\nimport UserAvatar from \"../UserAvatar\";\n\nclass Bar extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      menu: {\n        anchorEl: null\n      }\n    };\n  }\n\n  openMenu = event => {\n    const anchorEl = event.currentTarget;\n\n    this.setState({\n      menu: {\n        anchorEl\n      }\n    });\n  };\n\n  closeMenu = () => {\n    this.setState({\n      menu: {\n        anchorEl: null\n      }\n    });\n  };\n\n  render() {\n    // Properties\n    const { performingAction, user, userData } = this.props;\n\n    // Events\n    const {\n      onAboutClick,\n      onSettingsClick,\n      onSignOutClick,\n      onSignUpClick,\n      onSignInClick\n    } = this.props;\n\n    const { menu } = this.state;\n\n    const menuItems = [\n      {\n        name: \"About\",\n        onClick: onAboutClick\n      },\n      {\n        name: \"Settings\",\n        onClick: onSettingsClick\n      },\n      {\n        name: \"Sign out\",\n        divide: true,\n        onClick: onSignOutClick\n      }\n    ];\n\n    return (\n      <AppBar color=\"primary\" position=\"static\">\n        <Toolbar>\n          <Box display=\"flex\" flexGrow={1}>\n            <Typography color=\"inherit\" variant=\"h6\">\n              {process.env.REACT_APP_TITLE}\n            </Typography>\n          </Box>\n\n          {user && (\n            <>\n              <IconButton\n                color=\"inherit\"\n                disabled={performingAction}\n                onClick={this.openMenu}\n              >\n                <UserAvatar user={Object.assign(user, userData)} />\n              </IconButton>\n\n              <Menu\n                anchorEl={menu.anchorEl}\n                open={Boolean(menu.anchorEl)}\n                onClose={this.closeMenu}\n              >\n                {menuItems.map((menuItem, index) => {\n                  if (\n                    menuItem.hasOwnProperty(\"condition\") &&\n                    !menuItem.condition\n                  ) {\n                    return null;\n                  }\n\n                  if (menuItem.divide) {\n                    return (\n                      <span key={index}>\n                        <Divider />\n\n                        <MenuItem\n                          onClick={() => {\n                            this.closeMenu();\n\n                            menuItem.onClick();\n                          }}\n                        >\n                          {menuItem.name}\n                        </MenuItem>\n                      </span>\n                    );\n                  }\n\n                  return (\n                    <MenuItem\n                      key={index}\n                      onClick={() => {\n                        this.closeMenu();\n\n                        menuItem.onClick();\n                      }}\n                    >\n                      {menuItem.name}\n                    </MenuItem>\n                  );\n                })}\n              </Menu>\n            </>\n          )}\n\n          {!user && (\n            <ButtonGroup\n              color=\"inherit\"\n              disabled={performingAction}\n              variant=\"outlined\"\n            >\n              <Button onClick={onSignUpClick}>Sign up</Button>\n              <Button onClick={onSignInClick}>Sign in</Button>\n            </ButtonGroup>\n          )}\n        </Toolbar>\n      </AppBar>\n    );\n  }\n}\n\nBar.defaultProps = {\n  performingAction: false\n};\n\nBar.propTypes = {\n  // Properties\n  performingAction: PropTypes.bool.isRequired,\n  user: PropTypes.object,\n  userData: PropTypes.object,\n\n  // Events\n  onAboutClick: PropTypes.func.isRequired,\n  onSettingsClick: PropTypes.func.isRequired,\n  onSignOutClick: PropTypes.func.isRequired\n};\n\nexport default Bar;\n","import React, { Component } from \"react\";\n\nimport PropTypes from \"prop-types\";\n\nimport { withRouter } from \"react-router-dom\";\n\nimport { auth } from \"../../firebase\";\n\nimport HomeIcon from \"@material-ui/icons/Home\";\n\nimport authentication from \"../../services/authentication\";\n\nimport EmptyState from \"../EmptyState\";\n\nclass HomeContent extends Component {\n  signInWithEmailLink = () => {\n    const { user } = this.props;\n\n    if (user) {\n      return;\n    }\n\n    const emailLink = window.location.href;\n\n    if (!emailLink) {\n      return;\n    }\n\n    if (auth.isSignInWithEmailLink(emailLink)) {\n      let emailAddress = localStorage.getItem(\"emailAddress\");\n\n      if (!emailAddress) {\n        this.props.history.push(\"/\");\n\n        return;\n      }\n\n      authentication\n        .signInWithEmailLink(emailAddress, emailLink)\n        .then(value => {\n          const user = value.user;\n          const displayName = user.displayName;\n          const emailAddress = user.email;\n\n          this.props.openSnackbar(\n            `Signed in as ${displayName || emailAddress}`\n          );\n        })\n        .catch(reason => {\n          const code = reason.code;\n          const message = reason.message;\n\n          switch (code) {\n            case \"auth/expired-action-code\":\n            case \"auth/invalid-email\":\n            case \"auth/user-disabled\":\n              this.props.openSnackbar(message);\n              break;\n\n            default:\n              this.props.openSnackbar(message);\n              return;\n          }\n        })\n        .finally(() => {\n          this.props.history.push(\"/\");\n        });\n    }\n  };\n\n  render() {\n    // Properties\n    const { user } = this.props;\n\n    if (user) {\n      return <EmptyState icon={<HomeIcon />} title=\"Home\" />;\n    }\n\n    return (\n      <EmptyState\n        title={process.env.REACT_APP_TITLE}\n        description={process.env.REACT_APP_DESCRIPTION}\n      />\n    );\n  }\n\n  componentDidMount() {\n    this.signInWithEmailLink();\n  }\n}\n\nHomeContent.propTypes = {\n  // Properties\n  user: PropTypes.object\n};\n\nexport default withRouter(HomeContent);\n","import React, { Component } from \"react\";\n\nimport EmptyState from \"../EmptyState\";\n\nclass AuthContent extends Component {\n  render() {\n    return <EmptyState title=\"Auth\" />;\n  }\n}\n\nexport default AuthContent;\n","import React, { Component } from \"react\";\n\nimport EmptyState from \"../EmptyState\";\n\nclass AdminContent extends Component {\n  render() {\n    return <EmptyState title=\"Admin\" />;\n  }\n}\n\nexport default AdminContent;\n","import React, { Component } from \"react\";\n\nimport FindIcon from \"@material-ui/icons/FindInPage\";\n\nimport EmptyState from \"../EmptyState\";\n\nclass NotFoundContent extends Component {\n  render() {\n    return (\n      <EmptyState\n        icon={<FindIcon />}\n        title=\"Content not found\"\n        description=\"The requested URL was not found on this server\"\n      />\n    );\n  }\n}\n\nexport default NotFoundContent;\n","import React, { Component } from \"react\";\n\nimport PropTypes from \"prop-types\";\n\nimport { BrowserRouter, Switch, Redirect, Route } from \"react-router-dom\";\n\nimport HomeContent from \"../HomeContent\";\nimport AuthContent from \"../AuthContent\";\nimport AdminContent from \"../AdminContent\";\nimport NotFoundContent from \"../NotFoundContent\";\n\nclass Router extends Component {\n  render() {\n    // Properties\n    const { user, roles } = this.props;\n\n    // Functions\n    const { openSnackbar } = this.props;\n\n    return (\n      <BrowserRouter basename={process.env.REACT_APP_BASENAME}>\n        <Switch>\n          <Route path=\"/\" exact>\n            <HomeContent user={user} openSnackbar={openSnackbar} />\n          </Route>\n\n          <Route path=\"/auth\">\n            {user ? <AuthContent /> : <Redirect to=\"/\" />}\n          </Route>\n\n          <Route path=\"/admin\">\n            {user && roles.includes(\"admin\") ? (\n              <AdminContent />\n            ) : (\n              <Redirect to=\"/\" />\n            )}\n          </Route>\n\n          <Route>\n            <NotFoundContent />\n          </Route>\n        </Switch>\n      </BrowserRouter>\n    );\n  }\n}\n\nRouter.propTypes = {\n  // Properties\n  user: PropTypes.object,\n  roles: PropTypes.array.isRequired,\n\n  // Functions\n  openSnackbar: PropTypes.func.isRequired\n};\n\nexport default Router;\n","import React, { Component } from \"react\";\n\nimport PropTypes from \"prop-types\";\n\nimport { withStyles } from \"@material-ui/core/styles\";\n\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\n\nimport Typography from \"@material-ui/core/Typography\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport IconButton from \"@material-ui/core/IconButton\";\n\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\n\nimport CloseIcon from \"@material-ui/icons/Close\";\n\nconst styles = theme => ({\n  closeButton: {\n    position: \"absolute\",\n    right: theme.spacing(1),\n    top: theme.spacing(1)\n  }\n});\n\nclass AboutDialog extends Component {\n  render() {\n    // Styling\n    const { classes } = this.props;\n\n    // Dialog Properties\n    const { dialogProps } = this.props;\n\n    // Custom Properties\n    const { user } = this.props;\n\n    return (\n      <Dialog {...dialogProps}>\n        <DialogTitle disableTypography>\n          <Typography variant=\"h6\">About</Typography>\n\n          <Tooltip title=\"Close\">\n            <IconButton\n              className={classes.closeButton}\n              onClick={dialogProps.onClose}\n            >\n              <CloseIcon />\n            </IconButton>\n          </Tooltip>\n        </DialogTitle>\n\n        <DialogContent>\n          <List disablePadding>\n            <ListItem>\n              <ListItemText\n                primary=\"Version\"\n                secondary={process.env.REACT_APP_VERSION}\n              />\n            </ListItem>\n\n            {user && (\n              <ListItem>\n                <ListItemText primary=\"UID\" secondary={user.uid} />\n              </ListItem>\n            )}\n          </List>\n        </DialogContent>\n      </Dialog>\n    );\n  }\n}\n\nAboutDialog.propTypes = {\n  // Styling\n  classes: PropTypes.object.isRequired,\n\n  // Dialog Properties\n  dialogProps: PropTypes.object.isRequired,\n\n  // Custom Properties\n  user: PropTypes.object\n};\n\nexport default withStyles(styles)(AboutDialog);\n","import React from \"react\";\n\nimport AppleIcon from \"mdi-material-ui/Apple\";\nimport FacebookBoxIcon from \"mdi-material-ui/FacebookBox\";\nimport GitHubCircleIcon from \"mdi-material-ui/GithubCircle\";\nimport GoogleIcon from \"mdi-material-ui/Google\";\nimport MicrosoftIcon from \"mdi-material-ui/Microsoft\";\nimport TwitterIcon from \"mdi-material-ui/Twitter\";\nimport YahooIcon from \"mdi-material-ui/Yahoo\";\n\nconst authProviders = [\n  {\n    providerId: \"apple.com\",\n    color: \"#000000\",\n    icon: <AppleIcon />,\n    name: \"Apple\"\n  },\n  {\n    providerId: \"facebook.com\",\n    color: \"#3c5a99\",\n    icon: <FacebookBoxIcon />,\n    name: \"Facebook\"\n  },\n  {\n    providerId: \"github.com\",\n    color: \"#24292e\",\n    icon: <GitHubCircleIcon />,\n    name: \"GitHub\"\n  },\n  {\n    providerId: \"google.com\",\n    color: \"#4285f4\",\n    icon: <GoogleIcon />,\n    name: \"Google\"\n  },\n  {\n    providerId: \"microsoft.com\",\n    color: \"#f65314\",\n    icon: <MicrosoftIcon />,\n    name: \"Microsoft\"\n  },\n  {\n    providerId: \"twitter.com\",\n    color: \"#1da1f2\",\n    icon: <TwitterIcon />,\n    name: \"Twitter\"\n  },\n  {\n    providerId: \"yahoo.com\",\n    color: \"#410093\",\n    icon: <YahooIcon />,\n    name: \"Yahoo\"\n  }\n];\n\nexport default authProviders;\n","import React, { Component } from \"react\";\n\nimport PropTypes from \"prop-types\";\n\nimport { withStyles } from \"@material-ui/core/styles\";\n\nimport Box from \"@material-ui/core/Box\";\nimport ButtonGroup from \"@material-ui/core/ButtonGroup\";\nimport Button from \"@material-ui/core/Button\";\n\nimport authProviders from \"../../authProviders\";\n\nclass AuthProviderList extends Component {\n  render() {\n    // Properties\n    const { gutterBottom, performingAction } = this.props;\n\n    // Events\n    const { onAuthProviderClick } = this.props;\n\n    return (\n      <Box mb={gutterBottom ? 3 : 0}>\n        <ButtonGroup\n          disabled={performingAction}\n          fullWidth\n          orientation=\"vertical\"\n          variant=\"outlined\"\n        >\n          {authProviders.map(authProvider => {\n            const AuthProviderButton = withStyles({\n              root: {\n                color: authProvider.color\n              }\n            })(Button);\n\n            return (\n              <AuthProviderButton\n                key={authProvider.providerId}\n                startIcon={authProvider.icon}\n                onClick={() => onAuthProviderClick(authProvider.providerId)}\n              >\n                {authProvider.name}\n              </AuthProviderButton>\n            );\n          })}\n        </ButtonGroup>\n      </Box>\n    );\n  }\n}\n\nAuthProviderList.defaultProps = {\n  gutterBottom: false,\n  performingAction: false\n};\n\nAuthProviderList.propTypes = {\n  // Properties\n  gutterBottom: PropTypes.bool,\n  performingAction: PropTypes.bool,\n\n  // Events\n  onAuthProviderClick: PropTypes.func.isRequired\n};\n\nexport default AuthProviderList;\n","const constraints = {\n  firstName: {\n    presence: {\n      allowEmpty: false\n    },\n\n    type: \"string\"\n  },\n\n  lastName: {\n    presence: {\n      allowEmpty: false\n    },\n\n    type: \"string\"\n  },\n\n  username: {\n    length: {\n      minimum: 2,\n      maximum: 20\n    },\n\n    presence: {\n      allowEmpty: false\n    },\n\n    type: \"string\"\n  },\n\n  emailAddress: {\n    email: {\n      message: \"^E-mail address is invalid\"\n    },\n\n    presence: {\n      allowEmpty: false\n    },\n\n    type: \"string\"\n  },\n\n  emailAddressConfirmation: {\n    email: {\n      message: \"^E-mail address confirmation is invalid\"\n    },\n\n    equality: {\n      attribute: \"emailAddress\",\n      message: \"^E-mail address confirmation is not equal to e-mail address\"\n    },\n\n    presence: {\n      allowEmpty: false\n    },\n\n    type: \"string\"\n  },\n\n  password: {\n    length: {\n      minimum: 6\n    },\n\n    presence: {\n      allowEmpty: false\n    },\n\n    type: \"string\"\n  },\n\n  passwordConfirmation: {\n    equality: \"password\",\n\n    length: {\n      minimum: 6\n    },\n\n    presence: {\n      allowEmpty: false\n    },\n\n    type: \"string\"\n  }\n};\n\nexport default constraints;\n","import React, { Component } from \"react\";\n\nimport PropTypes from \"prop-types\";\n\nimport validate from \"validate.js\";\n\nimport { withStyles } from \"@material-ui/core/styles\";\n\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\n\nimport Typography from \"@material-ui/core/Typography\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Hidden from \"@material-ui/core/Hidden\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Button from \"@material-ui/core/Button\";\nimport Divider from \"@material-ui/core/Divider\";\nimport TextField from \"@material-ui/core/TextField\";\n\nimport CloseIcon from \"@material-ui/icons/Close\";\n\nimport AuthProviderList from \"../AuthProviderList\";\n\nimport constraints from \"../../constraints\";\nimport authentication from \"../../services/authentication\";\n\nconst styles = theme => ({\n  closeButton: {\n    position: \"absolute\",\n    right: theme.spacing(1),\n    top: theme.spacing(1)\n  },\n\n  icon: {\n    marginRight: theme.spacing(0.5)\n  },\n\n  divider: {\n    margin: \"auto\"\n  },\n\n  grid: {\n    marginBottom: theme.spacing(2)\n  }\n});\n\nconst initialState = {\n  performingAction: false,\n  emailAddress: \"\",\n  emailAddressConfirmation: \"\",\n  password: \"\",\n  passwordConfirmation: \"\",\n  errors: null\n};\n\nclass SignUpDialog extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = initialState;\n  }\n\n  signUp = () => {\n    const {\n      emailAddress,\n      emailAddressConfirmation,\n      password,\n      passwordConfirmation\n    } = this.state;\n\n    const errors = validate(\n      {\n        emailAddress: emailAddress,\n        emailAddressConfirmation: emailAddressConfirmation,\n        password: password,\n        passwordConfirmation: passwordConfirmation\n      },\n      {\n        emailAddress: constraints.emailAddress,\n        emailAddressConfirmation: constraints.emailAddressConfirmation,\n        password: constraints.password,\n        passwordConfirmation: constraints.passwordConfirmation\n      }\n    );\n\n    if (errors) {\n      this.setState({\n        errors: errors\n      });\n    } else {\n      this.setState(\n        {\n          performingAction: true,\n          errors: null\n        },\n        () => {\n          authentication\n            .signUpWithEmailAddressAndPassword(emailAddress, password)\n            .then(value => {\n              this.props.dialogProps.onClose();\n            })\n            .catch(reason => {\n              const code = reason.code;\n              const message = reason.message;\n\n              switch (code) {\n                case \"auth/email-already-in-use\":\n                case \"auth/invalid-email\":\n                case \"auth/operation-not-allowed\":\n                case \"auth/weak-password\":\n                  this.props.openSnackbar(message);\n                  return;\n\n                default:\n                  this.props.openSnackbar(message);\n                  return;\n              }\n            })\n            .finally(() => {\n              this.setState({\n                performingAction: false\n              });\n            });\n        }\n      );\n    }\n  };\n\n  signInWithAuthProvider = providerId => {\n    this.setState(\n      {\n        performingAction: true\n      },\n      () => {\n        authentication\n          .signInWithAuthProvider(providerId)\n          .then(user => {\n            this.props.dialogProps.onClose(() => {\n              const displayName = user.displayName;\n              const emailAddress = user.email;\n\n              this.props.openSnackbar(\n                `Signed in as ${displayName || emailAddress}`\n              );\n            });\n          })\n          .catch(reason => {\n            const code = reason.code;\n            const message = reason.message;\n\n            switch (code) {\n              case \"auth/account-exists-with-different-credential\":\n              case \"auth/auth-domain-config-required\":\n              case \"auth/cancelled-popup-request\":\n              case \"auth/operation-not-allowed\":\n              case \"auth/operation-not-supported-in-this-environment\":\n              case \"auth/popup-blocked\":\n              case \"auth/popup-closed-by-user\":\n              case \"auth/unauthorized-domain\":\n                this.props.openSnackbar(message);\n                return;\n\n              default:\n                this.props.openSnackbar(message);\n                return;\n            }\n          })\n          .finally(() => {\n            this.setState({\n              performingAction: false\n            });\n          });\n      }\n    );\n  };\n\n  handleKeyPress = event => {\n    const {\n      emailAddress,\n      emailAddressConfirmation,\n      password,\n      passwordConfirmation\n    } = this.state;\n\n    if (\n      !emailAddress ||\n      !emailAddressConfirmation ||\n      !password ||\n      !passwordConfirmation\n    ) {\n      return;\n    }\n\n    const key = event.key;\n\n    if (event.altKey || event.ctrlKey || event.metaKey || event.shiftKey) {\n      return;\n    }\n\n    if (key === \"Enter\") {\n      this.signUp();\n    }\n  };\n\n  handleExited = () => {\n    this.setState(initialState);\n  };\n\n  handleEmailAddressChange = event => {\n    const emailAddress = event.target.value;\n\n    this.setState({\n      emailAddress: emailAddress\n    });\n  };\n\n  handleEmailAddressConfirmationChange = event => {\n    const emailAddressConfirmation = event.target.value;\n\n    this.setState({\n      emailAddressConfirmation: emailAddressConfirmation\n    });\n  };\n\n  handlePasswordChange = event => {\n    const password = event.target.value;\n\n    this.setState({\n      password: password\n    });\n  };\n\n  handlePasswordConfirmationChange = event => {\n    const passwordConfirmation = event.target.value;\n\n    this.setState({\n      passwordConfirmation: passwordConfirmation\n    });\n  };\n\n  render() {\n    // Styling\n    const { classes } = this.props;\n\n    // Dialog Properties\n    const { dialogProps } = this.props;\n\n    const {\n      performingAction,\n      emailAddress,\n      emailAddressConfirmation,\n      password,\n      passwordConfirmation,\n      errors\n    } = this.state;\n\n    return (\n      <Dialog\n        fullWidth\n        maxWidth=\"sm\"\n        disableBackdropClick={performingAction}\n        disableEscapeKeyDown={performingAction}\n        {...dialogProps}\n        onKeyPress={this.handleKeyPress}\n        onExited={this.handleExited}\n      >\n        <DialogTitle disableTypography>\n          <Typography variant=\"h6\">Sign up for an account</Typography>\n\n          <Tooltip title=\"Close\">\n            <IconButton\n              className={classes.closeButton}\n              disabled={performingAction}\n              onClick={dialogProps.onClose}\n            >\n              <CloseIcon />\n            </IconButton>\n          </Tooltip>\n        </DialogTitle>\n\n        <Hidden xsDown>\n          <DialogContent>\n            <Grid container direction=\"row\">\n              <Grid item xs={4}>\n                <AuthProviderList\n                  performingAction={performingAction}\n                  onAuthProviderClick={this.signInWithAuthProvider}\n                />\n              </Grid>\n\n              <Grid item xs={1}>\n                <Divider className={classes.divider} orientation=\"vertical\" />\n              </Grid>\n\n              <Grid item xs={7}>\n                <Grid container direction=\"column\" spacing={2}>\n                  <Grid item xs>\n                    <TextField\n                      autoComplete=\"email\"\n                      disabled={performingAction}\n                      error={!!(errors && errors.emailAddress)}\n                      fullWidth\n                      helperText={\n                        errors && errors.emailAddress\n                          ? errors.emailAddress[0]\n                          : \"\"\n                      }\n                      label=\"E-mail address\"\n                      placeholder=\"john@doe.com\"\n                      required\n                      type=\"email\"\n                      value={emailAddress}\n                      variant=\"outlined\"\n                      onChange={this.handleEmailAddressChange}\n                    />\n                  </Grid>\n\n                  <Grid item xs>\n                    <TextField\n                      autoComplete=\"email\"\n                      disabled={performingAction}\n                      error={!!(errors && errors.emailAddressConfirmation)}\n                      fullWidth\n                      helperText={\n                        errors && errors.emailAddressConfirmation\n                          ? errors.emailAddressConfirmation[0]\n                          : \"\"\n                      }\n                      label=\"E-mail address confirmation\"\n                      placeholder=\"john@doe.com\"\n                      required\n                      type=\"email\"\n                      value={emailAddressConfirmation}\n                      variant=\"outlined\"\n                      onChange={this.handleEmailAddressConfirmationChange}\n                    />\n                  </Grid>\n\n                  <Grid item xs>\n                    <TextField\n                      autoComplete=\"new-password\"\n                      disabled={performingAction}\n                      error={!!(errors && errors.password)}\n                      fullWidth\n                      helperText={\n                        errors && errors.password ? errors.password[0] : \"\"\n                      }\n                      label=\"Password\"\n                      placeholder=\"&bull;&bull;&bull;&bull;&bull;&bull;&bull;&bull;&bull;&bull;&bull;&bull;&bull;&bull;\"\n                      required\n                      type=\"password\"\n                      value={password}\n                      variant=\"outlined\"\n                      onChange={this.handlePasswordChange}\n                    />\n                  </Grid>\n\n                  <Grid item xs>\n                    <TextField\n                      autoComplete=\"password\"\n                      disabled={performingAction}\n                      error={!!(errors && errors.passwordConfirmation)}\n                      fullWidth\n                      helperText={\n                        errors && errors.passwordConfirmation\n                          ? errors.passwordConfirmation[0]\n                          : \"\"\n                      }\n                      label=\"Password confirmation\"\n                      placeholder=\"&bull;&bull;&bull;&bull;&bull;&bull;&bull;&bull;&bull;&bull;&bull;&bull;&bull;&bull;\"\n                      required\n                      type=\"password\"\n                      value={passwordConfirmation}\n                      variant=\"outlined\"\n                      onChange={this.handlePasswordConfirmationChange}\n                    />\n                  </Grid>\n                </Grid>\n              </Grid>\n            </Grid>\n          </DialogContent>\n        </Hidden>\n\n        <Hidden smUp>\n          <DialogContent>\n            <AuthProviderList\n              gutterBottom\n              performingAction={performingAction}\n              onAuthProviderClick={this.signInWithAuthProvider}\n            />\n\n            <Grid container direction=\"column\" spacing={2}>\n              <Grid item xs>\n                <TextField\n                  autoComplete=\"email\"\n                  disabled={performingAction}\n                  error={!!(errors && errors.emailAddress)}\n                  fullWidth\n                  helperText={\n                    errors && errors.emailAddress ? errors.emailAddress[0] : \"\"\n                  }\n                  label=\"E-mail address\"\n                  placeholder=\"john@doe.com\"\n                  required\n                  type=\"email\"\n                  value={emailAddress}\n                  variant=\"outlined\"\n                  onChange={this.handleEmailAddressChange}\n                />\n              </Grid>\n\n              <Grid item xs>\n                <TextField\n                  autoComplete=\"email\"\n                  disabled={performingAction}\n                  error={!!(errors && errors.emailAddressConfirmation)}\n                  fullWidth\n                  helperText={\n                    errors && errors.emailAddressConfirmation\n                      ? errors.emailAddressConfirmation[0]\n                      : \"\"\n                  }\n                  label=\"E-mail address confirmation\"\n                  placeholder=\"john@doe.com\"\n                  required\n                  type=\"email\"\n                  value={emailAddressConfirmation}\n                  variant=\"outlined\"\n                  onChange={this.handleEmailAddressConfirmationChange}\n                />\n              </Grid>\n\n              <Grid item xs>\n                <TextField\n                  autoComplete=\"new-password\"\n                  disabled={performingAction}\n                  error={!!(errors && errors.password)}\n                  fullWidth\n                  helperText={\n                    errors && errors.password ? errors.password[0] : \"\"\n                  }\n                  label=\"Password\"\n                  placeholder=\"&bull;&bull;&bull;&bull;&bull;&bull;&bull;&bull;&bull;&bull;&bull;&bull;&bull;&bull;\"\n                  required\n                  type=\"password\"\n                  value={password}\n                  variant=\"outlined\"\n                  onChange={this.handlePasswordChange}\n                />\n              </Grid>\n\n              <Grid item xs>\n                <TextField\n                  autoComplete=\"password\"\n                  disabled={performingAction}\n                  error={!!(errors && errors.passwordConfirmation)}\n                  fullWidth\n                  helperText={\n                    errors && errors.passwordConfirmation\n                      ? errors.passwordConfirmation[0]\n                      : \"\"\n                  }\n                  label=\"Password confirmation\"\n                  placeholder=\"&bull;&bull;&bull;&bull;&bull;&bull;&bull;&bull;&bull;&bull;&bull;&bull;&bull;&bull;\"\n                  required\n                  type=\"password\"\n                  value={passwordConfirmation}\n                  variant=\"outlined\"\n                  onChange={this.handlePasswordConfirmationChange}\n                />\n              </Grid>\n            </Grid>\n          </DialogContent>\n        </Hidden>\n\n        <DialogActions>\n          <Button\n            color=\"primary\"\n            disabled={\n              !emailAddress ||\n              !emailAddressConfirmation ||\n              !password ||\n              !passwordConfirmation ||\n              performingAction\n            }\n            variant=\"contained\"\n            onClick={this.signUp}\n          >\n            Sign up\n          </Button>\n        </DialogActions>\n      </Dialog>\n    );\n  }\n}\n\nSignUpDialog.propTypes = {\n  // Styling\n  classes: PropTypes.object.isRequired,\n\n  // Dialog Properties\n  dialogProps: PropTypes.object.isRequired,\n\n  // Custom Functions\n  openSnackbar: PropTypes.func.isRequired\n};\n\nexport default withStyles(styles)(SignUpDialog);\n","import React, { Component } from \"react\";\n\nimport PropTypes from \"prop-types\";\n\nimport validate from \"validate.js\";\n\nimport { withStyles } from \"@material-ui/core/styles\";\n\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\n\nimport Typography from \"@material-ui/core/Typography\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Hidden from \"@material-ui/core/Hidden\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Button from \"@material-ui/core/Button\";\nimport Divider from \"@material-ui/core/Divider\";\nimport TextField from \"@material-ui/core/TextField\";\n\nimport CloseIcon from \"@material-ui/icons/Close\";\n\nimport AuthProviderList from \"../AuthProviderList\";\n\nimport constraints from \"../../constraints\";\nimport authentication from \"../../services/authentication\";\n\nconst styles = theme => ({\n  closeButton: {\n    position: \"absolute\",\n    right: theme.spacing(1),\n    top: theme.spacing(1)\n  },\n\n  icon: {\n    marginRight: theme.spacing(0.5)\n  },\n\n  divider: {\n    margin: \"auto\"\n  },\n\n  grid: {\n    marginBottom: theme.spacing(2)\n  }\n});\n\nconst initialState = {\n  performingAction: false,\n  emailAddress: \"\",\n  password: \"\",\n  errors: null\n};\n\nclass SignInDialog extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = initialState;\n  }\n\n  getSignInButton = () => {\n    const { emailAddress, password, performingAction } = this.state;\n\n    if (emailAddress && !password) {\n      return (\n        <Button\n          color=\"primary\"\n          disabled={!emailAddress || performingAction}\n          variant=\"contained\"\n          onClick={() => this.sendSignInLinkToEmail()}\n        >\n          Send sign-in link\n        </Button>\n      );\n    }\n\n    return (\n      <Button\n        color=\"primary\"\n        disabled={!emailAddress || performingAction}\n        variant=\"contained\"\n        onClick={() => this.signIn()}\n      >\n        Sign in\n      </Button>\n    );\n  };\n\n  resetPassword = () => {\n    const { emailAddress } = this.state;\n\n    const errors = validate(\n      {\n        emailAddress: emailAddress\n      },\n      {\n        emailAddress: constraints.emailAddress\n      }\n    );\n\n    if (errors) {\n      this.setState({\n        errors: errors\n      });\n    } else {\n      this.setState(\n        {\n          errors: null\n        },\n        () => {\n          this.setState(\n            {\n              performingAction: true\n            },\n            () => {\n              authentication\n                .resetPassword(emailAddress)\n                .then(value => {\n                  this.props.openSnackbar(\n                    `Sent password reset e-mail to ${emailAddress}`\n                  );\n                })\n                .catch(reason => {\n                  const code = reason.code;\n                  const message = reason.message;\n\n                  switch (code) {\n                    case \"auth/invalid-email\":\n                    case \"auth/missing-android-pkg-name\":\n                    case \"auth/missing-continue-uri\":\n                    case \"auth/missing-ios-bundle-id\":\n                    case \"auth/invalid-continue-uri\":\n                    case \"auth/unauthorized-continue-uri\":\n                    case \"auth/user-not-found\":\n                      this.props.openSnackbar(message);\n                      return;\n\n                    default:\n                      this.props.openSnackbar(message);\n                      return;\n                  }\n                })\n                .finally(() => {\n                  this.setState({\n                    performingAction: false\n                  });\n                });\n            }\n          );\n        }\n      );\n    }\n  };\n\n  signIn = () => {\n    const { emailAddress, password } = this.state;\n\n    const errors = validate(\n      {\n        emailAddress: emailAddress,\n        password: password\n      },\n      {\n        emailAddress: constraints.emailAddress,\n        password: constraints.password\n      }\n    );\n\n    if (errors) {\n      this.setState({\n        errors: errors\n      });\n    } else {\n      this.setState(\n        {\n          performingAction: true,\n          errors: null\n        },\n        () => {\n          authentication\n            .signIn(emailAddress, password)\n            .then(user => {\n              this.props.dialogProps.onClose(() => {\n                const displayName = user.displayName;\n                const emailAddress = user.email;\n\n                this.props.openSnackbar(\n                  `Signed in as ${displayName || emailAddress}`\n                );\n              });\n            })\n            .catch(reason => {\n              const code = reason.code;\n              const message = reason.message;\n\n              switch (code) {\n                case \"auth/invalid-email\":\n                case \"auth/user-disabled\":\n                case \"auth/user-not-found\":\n                case \"auth/wrong-password\":\n                  this.props.openSnackbar(message);\n                  return;\n\n                default:\n                  this.props.openSnackbar(message);\n                  return;\n              }\n            })\n            .finally(() => {\n              this.setState({\n                performingAction: false\n              });\n            });\n        }\n      );\n    }\n  };\n\n  sendSignInLinkToEmail = () => {\n    const { emailAddress } = this.state;\n\n    const errors = validate(\n      {\n        emailAddress: emailAddress\n      },\n      {\n        emailAddress: constraints.emailAddress\n      }\n    );\n\n    if (errors) {\n      this.setState({\n        errors: errors\n      });\n\n      return;\n    }\n\n    this.setState(\n      {\n        performingAction: true,\n        errors: null\n      },\n      () => {\n        authentication\n          .sendSignInLinkToEmail(emailAddress)\n          .then(() => {\n            this.props.dialogProps.onClose(() => {\n              this.props.openSnackbar(`Sent sign-in e-mail to ${emailAddress}`);\n            });\n          })\n          .catch(reason => {\n            const code = reason.code;\n            const message = reason.message;\n\n            switch (code) {\n              case \"auth/argument-error\":\n              case \"auth/invalid-email\":\n              case \"auth/missing-android-pkg-name\":\n              case \"auth/missing-continue-uri\":\n              case \"auth/missing-ios-bundle-id\":\n              case \"auth/invalid-continue-uri\":\n              case \"auth/unauthorized-continue-uri\":\n                this.props.openSnackbar(message);\n                return;\n\n              default:\n                this.props.openSnackbar(message);\n                return;\n            }\n          })\n          .finally(() => {\n            this.setState({\n              performingAction: false\n            });\n          });\n      }\n    );\n  };\n\n  signInWithAuthProvider = providerId => {\n    this.setState(\n      {\n        performingAction: true\n      },\n      () => {\n        authentication\n          .signInWithAuthProvider(providerId)\n          .then(user => {\n            this.props.dialogProps.onClose(() => {\n              const displayName = user.displayName;\n              const emailAddress = user.email;\n\n              this.props.openSnackbar(\n                `Signed in as ${displayName || emailAddress}`\n              );\n            });\n          })\n          .catch(reason => {\n            const code = reason.code;\n            const message = reason.message;\n\n            switch (code) {\n              case \"auth/account-exists-with-different-credential\":\n              case \"auth/auth-domain-config-required\":\n              case \"auth/cancelled-popup-request\":\n              case \"auth/operation-not-allowed\":\n              case \"auth/operation-not-supported-in-this-environment\":\n              case \"auth/popup-blocked\":\n              case \"auth/popup-closed-by-user\":\n              case \"auth/unauthorized-domain\":\n                this.props.openSnackbar(message);\n                return;\n\n              default:\n                this.props.openSnackbar(message);\n                return;\n            }\n          })\n          .finally(() => {\n            this.setState({\n              performingAction: false\n            });\n          });\n      }\n    );\n  };\n\n  handleKeyPress = event => {\n    const { emailAddress, password } = this.state;\n\n    if (!emailAddress && !password) {\n      return;\n    }\n\n    const key = event.key;\n\n    if (event.altKey || event.ctrlKey || event.metaKey || event.shiftKey) {\n      return;\n    }\n\n    if (key === \"Enter\") {\n      if (emailAddress && !password) {\n        this.sendSignInLinkToEmail();\n      } else {\n        this.signIn();\n      }\n    }\n  };\n\n  handleExited = () => {\n    this.setState(initialState);\n  };\n\n  handleEmailAddressChange = event => {\n    const emailAddress = event.target.value;\n\n    this.setState({\n      emailAddress: emailAddress\n    });\n  };\n\n  handlePasswordChange = event => {\n    const password = event.target.value;\n\n    this.setState({\n      password: password\n    });\n  };\n\n  render() {\n    // Styling\n    const { classes } = this.props;\n\n    // Dialog Properties\n    const { dialogProps } = this.props;\n\n    const { performingAction, emailAddress, password, errors } = this.state;\n\n    return (\n      <Dialog\n        fullWidth\n        maxWidth=\"sm\"\n        disableBackdropClick={performingAction}\n        disableEscapeKeyDown={performingAction}\n        {...dialogProps}\n        onKeyPress={this.handleKeyPress}\n        onExited={this.handleExited}\n      >\n        <DialogTitle disableTypography>\n          <Typography variant=\"h6\">Sign in to your account</Typography>\n\n          <Tooltip title=\"Close\">\n            <IconButton\n              className={classes.closeButton}\n              disabled={performingAction}\n              onClick={dialogProps.onClose}\n            >\n              <CloseIcon />\n            </IconButton>\n          </Tooltip>\n        </DialogTitle>\n\n        <DialogContent>\n          <Hidden xsDown>\n            <Grid container direction=\"row\">\n              <Grid item xs={4}>\n                <AuthProviderList\n                  performingAction={performingAction}\n                  onAuthProviderClick={this.signInWithAuthProvider}\n                />\n              </Grid>\n\n              <Grid item xs={1}>\n                <Divider className={classes.divider} orientation=\"vertical\" />\n              </Grid>\n\n              <Grid item xs={7}>\n                <Grid container direction=\"column\" spacing={2}>\n                  <Grid item xs>\n                    <TextField\n                      autoComplete=\"email\"\n                      disabled={performingAction}\n                      error={!!(errors && errors.emailAddress)}\n                      fullWidth\n                      helperText={\n                        errors && errors.emailAddress\n                          ? errors.emailAddress[0]\n                          : \"\"\n                      }\n                      label=\"E-mail address\"\n                      placeholder=\"john@doe.com\"\n                      required\n                      type=\"email\"\n                      value={emailAddress}\n                      variant=\"outlined\"\n                      onChange={this.handleEmailAddressChange}\n                    />\n                  </Grid>\n\n                  <Grid item xs>\n                    <TextField\n                      autoComplete=\"current-password\"\n                      disabled={performingAction}\n                      error={!!(errors && errors.password)}\n                      fullWidth\n                      helperText={\n                        errors && errors.password ? errors.password[0] : \"\"\n                      }\n                      label=\"Password\"\n                      placeholder=\"&bull;&bull;&bull;&bull;&bull;&bull;&bull;&bull;&bull;&bull;&bull;&bull;&bull;&bull;\"\n                      required\n                      type=\"password\"\n                      value={password}\n                      variant=\"outlined\"\n                      onChange={this.handlePasswordChange}\n                    />\n                  </Grid>\n                </Grid>\n              </Grid>\n            </Grid>\n          </Hidden>\n\n          <Hidden smUp>\n            <AuthProviderList\n              gutterBottom\n              performingAction={performingAction}\n              onAuthProviderClick={this.signInWithAuthProvider}\n            />\n\n            <Grid container direction=\"column\" spacing={2}>\n              <Grid item xs>\n                <TextField\n                  autoComplete=\"email\"\n                  disabled={performingAction}\n                  error={!!(errors && errors.emailAddress)}\n                  fullWidth\n                  helperText={\n                    errors && errors.emailAddress ? errors.emailAddress[0] : \"\"\n                  }\n                  label=\"E-mail address\"\n                  placeholder=\"john@doe.com\"\n                  required\n                  type=\"email\"\n                  value={emailAddress}\n                  variant=\"outlined\"\n                  onChange={this.handleEmailAddressChange}\n                />\n              </Grid>\n\n              <Grid item xs>\n                <TextField\n                  autoComplete=\"current-password\"\n                  disabled={performingAction}\n                  error={!!(errors && errors.password)}\n                  fullWidth\n                  helperText={\n                    errors && errors.password ? errors.password[0] : \"\"\n                  }\n                  label=\"Password\"\n                  placeholder=\"&bull;&bull;&bull;&bull;&bull;&bull;&bull;&bull;&bull;&bull;&bull;&bull;&bull;&bull;\"\n                  required\n                  type=\"password\"\n                  value={password}\n                  variant=\"outlined\"\n                  onChange={this.handlePasswordChange}\n                />\n              </Grid>\n            </Grid>\n          </Hidden>\n        </DialogContent>\n\n        <DialogActions>\n          <Button\n            color=\"primary\"\n            disabled={!emailAddress || performingAction}\n            variant=\"outlined\"\n            onClick={this.resetPassword}\n          >\n            Reset password\n          </Button>\n\n          {this.getSignInButton()}\n        </DialogActions>\n      </Dialog>\n    );\n  }\n}\n\nSignInDialog.propTypes = {\n  // Styling\n  classes: PropTypes.object.isRequired,\n\n  // Dialog Properties\n  dialogProps: PropTypes.object.isRequired,\n\n  // Custom Functions\n  openSnackbar: PropTypes.func.isRequired\n};\n\nexport default withStyles(styles)(SignInDialog);\n","import React, { Component } from \"react\";\n\nimport PropTypes from \"prop-types\";\n\nimport validate from \"validate.js\";\nimport moment from \"moment\";\n\nimport { withStyles } from \"@material-ui/core/styles\";\n\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Box from \"@material-ui/core/Box\";\nimport Fade from \"@material-ui/core/Fade\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport Badge from \"@material-ui/core/Badge\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport Fab from \"@material-ui/core/Fab\";\nimport Button from \"@material-ui/core/Button\";\n\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport ListItemSecondaryAction from \"@material-ui/core/ListItemSecondaryAction\";\n\nimport Hidden from \"@material-ui/core/Hidden\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Divider from \"@material-ui/core/Divider\";\n\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport PhotoIcon from \"@material-ui/icons/Photo\";\nimport CloudUploadIcon from \"@material-ui/icons/CloudUpload\";\nimport PersonIcon from \"@material-ui/icons/Person\";\nimport EditIcon from \"@material-ui/icons/Edit\";\nimport PersonOutlineIcon from \"@material-ui/icons/PersonOutline\";\nimport EmailIcon from \"@material-ui/icons/Email\";\nimport WarningIcon from \"@material-ui/icons/Warning\";\nimport CheckIcon from \"@material-ui/icons/Check\";\nimport AccessTimeIcon from \"@material-ui/icons/AccessTime\";\nimport DeleteForeverIcon from \"@material-ui/icons/DeleteForever\";\n\nimport constraints from \"../../constraints\";\nimport authentication from \"../../services/authentication\";\n\nconst styles = theme => ({\n  dialogContent: {\n    paddingTop: theme.spacing(2)\n  },\n\n  badge: {\n    top: theme.spacing(2),\n    right: -theme.spacing(2)\n  },\n\n  loadingBadge: {\n    top: \"50%\",\n    right: \"50%\"\n  },\n\n  avatar: {\n    marginRight: \"auto\",\n    marginLeft: \"auto\",\n\n    width: theme.spacing(14),\n    height: theme.spacing(14)\n  },\n\n  nameInitials: {\n    cursor: \"default\"\n  },\n\n  personIcon: {\n    fontSize: theme.spacing(7)\n  },\n\n  small: {\n    width: theme.spacing(4),\n    height: theme.spacing(4),\n\n    minHeight: \"initial\"\n  }\n});\n\nconst initialState = {\n  profileCompletion: 0,\n  securityRating: 0,\n  showingField: \"\",\n  avatar: null,\n  avatarUrl: \"\",\n  firstName: \"\",\n  lastName: \"\",\n  username: \"\",\n  emailAddress: \"\",\n  performingAction: false,\n  loadingAvatar: false,\n  sentVerificationEmail: false,\n  errors: null\n};\n\nclass AccountTab extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = initialState;\n  }\n\n  getNameInitialsOrIcon = () => {\n    const { user } = this.props;\n\n    if (!user) {\n      return null;\n    }\n\n    const { classes, userData } = this.props;\n\n    if (!userData) {\n      return <PersonIcon className={classes.personIcon} />;\n    }\n\n    const nameInitials = authentication.getNameInitials({\n      ...user,\n      ...userData\n    });\n\n    if (nameInitials) {\n      return (\n        <Typography className={classes.nameInitials} variant=\"h2\">\n          {nameInitials}\n        </Typography>\n      );\n    }\n\n    return <PersonIcon className={classes.personIcon} />;\n  };\n\n  uploadAvatar = () => {\n    const { avatar } = this.state;\n\n    if (!avatar) {\n      return;\n    }\n\n    this.setState(\n      {\n        performingAction: true,\n        loadingAvatar: true\n      },\n      () => {\n        authentication\n          .changeAvatar(avatar)\n          .then(value => {\n            const { user, userData } = this.props;\n\n            this.setState({\n              profileCompletion: authentication.getProfileCompletion({\n                ...user,\n                ...userData\n              })\n            });\n          })\n          .catch(reason => {\n            const code = reason.code;\n            const message = reason.message;\n\n            switch (code) {\n              default:\n                this.props.openSnackbar(message);\n                return;\n            }\n          })\n          .finally(() => {\n            this.setState({\n              performingAction: false,\n              loadingAvatar: false,\n              avatar: null,\n              avatarUrl: \"\"\n            });\n          });\n      }\n    );\n  };\n\n  removeAvatar = () => {\n    const { user } = this.props;\n\n    const { avatar, avatarUrl } = this.state;\n\n    if (!user.photoURL && !avatar && !avatarUrl) {\n      return;\n    }\n\n    if (\n      (!user.photoURL && avatar && avatarUrl) ||\n      (user.photoURL && avatar && avatarUrl)\n    ) {\n      URL.revokeObjectURL(avatarUrl);\n\n      this.setState({\n        avatar: null,\n        avatarUrl: \"\"\n      });\n    } else if (user.photoURL && !avatar && !avatarUrl) {\n      this.setState(\n        {\n          performingAction: true,\n          loadingAvatar: true\n        },\n        () => {\n          authentication\n            .removeAvatar()\n            .then(value => {\n              const { user, userData } = this.props;\n\n              this.setState({\n                profileCompletion: authentication.getProfileCompletion({\n                  ...user,\n                  ...userData\n                })\n              });\n            })\n            .catch(reason => {\n              const code = reason.code;\n              const message = reason.message;\n\n              switch (code) {\n                default:\n                  this.props.openSnackbar(message);\n                  return;\n              }\n            })\n            .finally(() => {\n              this.setState({\n                performingAction: false,\n                loadingAvatar: false\n              });\n            });\n        }\n      );\n    }\n  };\n\n  showField = fieldId => {\n    if (!fieldId) {\n      return;\n    }\n\n    this.setState({\n      showingField: fieldId\n    });\n  };\n\n  hideFields = callback => {\n    this.setState(\n      {\n        showingField: \"\",\n        firstName: \"\",\n        lastName: \"\",\n        username: \"\",\n        emailAddress: \"\",\n        errors: null\n      },\n      () => {\n        if (callback && typeof callback === \"function\") {\n          callback();\n        }\n      }\n    );\n  };\n\n  changeFirstName = () => {\n    const { firstName } = this.state;\n\n    const errors = validate(\n      {\n        firstName: firstName\n      },\n      {\n        firstName: constraints.firstName\n      }\n    );\n\n    if (errors) {\n      this.setState({\n        errors: errors\n      });\n\n      return;\n    }\n\n    this.setState(\n      {\n        errors: null\n      },\n      () => {\n        const { userData } = this.props;\n\n        if (firstName === userData.firstName) {\n          return;\n        }\n\n        this.setState(\n          {\n            performingAction: true\n          },\n          () => {\n            authentication\n              .changeFirstName(firstName)\n              .then(() => {\n                const { user, userData } = this.props;\n\n                this.setState(\n                  {\n                    profileCompletion: authentication.getProfileCompletion({\n                      ...user,\n                      ...userData\n                    })\n                  },\n                  () => {\n                    this.hideFields();\n                  }\n                );\n              })\n              .catch(reason => {\n                const code = reason.code;\n                const message = reason.message;\n\n                switch (code) {\n                  default:\n                    this.props.openSnackbar(message);\n                    return;\n                }\n              })\n              .finally(() => {\n                this.setState({\n                  performingAction: false\n                });\n              });\n          }\n        );\n      }\n    );\n  };\n\n  changeLastName = () => {\n    const { lastName } = this.state;\n\n    const errors = validate(\n      {\n        lastName: lastName\n      },\n      {\n        lastName: constraints.lastName\n      }\n    );\n\n    if (errors) {\n      this.setState({\n        errors: errors\n      });\n\n      return;\n    }\n\n    this.setState(\n      {\n        errors: null\n      },\n      () => {\n        const { userData } = this.props;\n\n        if (lastName === userData.lastName) {\n          return;\n        }\n\n        this.setState(\n          {\n            performingAction: true\n          },\n          () => {\n            authentication\n              .changeLastName(lastName)\n              .then(() => {\n                const { user, userData } = this.props;\n\n                this.setState(\n                  {\n                    profileCompletion: authentication.getProfileCompletion({\n                      ...user,\n                      ...userData\n                    })\n                  },\n                  () => {\n                    this.hideFields();\n                  }\n                );\n              })\n              .catch(reason => {\n                const code = reason.code;\n                const message = reason.message;\n\n                switch (code) {\n                  default:\n                    this.props.openSnackbar(message);\n                    return;\n                }\n              })\n              .finally(() => {\n                this.setState({\n                  performingAction: false\n                });\n              });\n          }\n        );\n      }\n    );\n  };\n\n  changeUsername = () => {\n    const { username } = this.state;\n\n    const errors = validate(\n      {\n        username: username\n      },\n      {\n        username: constraints.username\n      }\n    );\n\n    if (errors) {\n      this.setState({\n        errors: errors\n      });\n\n      return;\n    }\n\n    this.setState(\n      {\n        errors: null\n      },\n      () => {\n        const { userData } = this.props;\n\n        if (username === userData.username) {\n          return;\n        }\n\n        this.setState(\n          {\n            performingAction: true\n          },\n          () => {\n            authentication\n              .changeUsername(username)\n              .then(() => {\n                const { user, userData } = this.props;\n\n                this.setState(\n                  {\n                    profileCompletion: authentication.getProfileCompletion({\n                      ...user,\n                      ...userData\n                    })\n                  },\n                  () => {\n                    this.hideFields();\n                  }\n                );\n              })\n              .catch(reason => {\n                const code = reason.code;\n                const message = reason.message;\n\n                switch (code) {\n                  default:\n                    this.props.openSnackbar(message);\n                    return;\n                }\n              })\n              .finally(() => {\n                this.setState({\n                  performingAction: false\n                });\n              });\n          }\n        );\n      }\n    );\n  };\n\n  changeEmailAddress = () => {\n    const { emailAddress } = this.state;\n\n    const errors = validate(\n      {\n        emailAddress: emailAddress\n      },\n      {\n        emailAddress: constraints.emailAddress\n      }\n    );\n\n    if (errors) {\n      this.setState({\n        errors: errors\n      });\n\n      return;\n    }\n\n    this.setState(\n      {\n        errors: null\n      },\n      () => {\n        const { user } = this.props;\n\n        if (emailAddress === user.email) {\n          return;\n        }\n\n        this.setState(\n          {\n            performingAction: true\n          },\n          () => {\n            authentication\n              .changeEmailAddress(emailAddress)\n              .then(() => {\n                const { user, userData } = this.props;\n\n                this.setState(\n                  {\n                    profileCompletion: authentication.getProfileCompletion({\n                      ...user,\n                      ...userData\n                    })\n                  },\n                  () => {\n                    this.hideFields();\n                  }\n                );\n              })\n              .catch(reason => {\n                const code = reason.code;\n                const message = reason.message;\n\n                switch (code) {\n                  default:\n                    this.props.openSnackbar(message);\n                    return;\n                }\n              })\n              .finally(() => {\n                this.setState({\n                  performingAction: false\n                });\n              });\n          }\n        );\n      }\n    );\n  };\n\n  verifyEmailAddress = () => {\n    this.setState(\n      {\n        performingAction: true\n      },\n      () => {\n        authentication\n          .verifyEmailAddress()\n          .then(() => {\n            this.setState(\n              {\n                sentVerificationEmail: true\n              },\n              () => {\n                this.props.openSnackbar(\"Sent verification e-mail\");\n              }\n            );\n          })\n          .catch(reason => {\n            const code = reason.code;\n            const message = reason.message;\n\n            switch (code) {\n              default:\n                this.props.openSnackbar(message);\n                return;\n            }\n          })\n          .finally(() => {\n            this.setState({\n              performingAction: false\n            });\n          });\n      }\n    );\n  };\n\n  changeField = fieldId => {\n    switch (fieldId) {\n      case \"first-name\":\n        this.changeFirstName();\n        return;\n\n      case \"last-name\":\n        this.changeLastName();\n        return;\n\n      case \"username\":\n        this.changeUsername();\n        return;\n\n      case \"email-address\":\n        this.changeEmailAddress();\n        return;\n\n      default:\n        return;\n    }\n  };\n\n  handleKeyDown = (event, fieldId) => {\n    if (!event || !fieldId) {\n      return;\n    }\n\n    if (event.altKey || event.ctrlKey || event.metaKey || event.shiftKey) {\n      return;\n    }\n\n    const key = event.key;\n\n    if (!key) {\n      return;\n    }\n\n    if (key === \"Escape\") {\n      this.hideFields();\n    } else if (key === \"Enter\") {\n      this.changeField(fieldId);\n    }\n  };\n\n  handleAvatarChange = event => {\n    if (!event) {\n      return;\n    }\n\n    const files = event.target.files;\n\n    if (!files) {\n      return;\n    }\n\n    const avatar = files[0];\n\n    if (!avatar) {\n      return;\n    }\n\n    const fileTypes = [\n      \"image/gif\",\n      \"image/jpeg\",\n      \"image/png\",\n      \"image/webp\",\n      \"image/svg+xml\"\n    ];\n\n    if (!fileTypes.includes(avatar.type)) {\n      return;\n    }\n\n    if (avatar.size > 20 * 1024 * 1024) {\n      return;\n    }\n\n    this.setState({\n      avatar: avatar,\n      avatarUrl: URL.createObjectURL(avatar)\n    });\n  };\n\n  handleFirstNameChange = event => {\n    if (!event) {\n      return;\n    }\n\n    const firstName = event.target.value;\n\n    this.setState({\n      firstName: firstName\n    });\n  };\n\n  handleLastNameChange = event => {\n    if (!event) {\n      return;\n    }\n\n    const lastName = event.target.value;\n\n    this.setState({\n      lastName: lastName\n    });\n  };\n\n  handleUsernameChange = event => {\n    if (!event) {\n      return;\n    }\n\n    const username = event.target.value;\n\n    this.setState({\n      username: username\n    });\n  };\n\n  handleEmailAddressChange = event => {\n    if (!event) {\n      return;\n    }\n\n    const emailAddress = event.target.value;\n\n    this.setState({\n      emailAddress: emailAddress\n    });\n  };\n\n  render() {\n    // Styling\n    const { classes } = this.props;\n\n    // Properties\n    const { user, userData } = this.props;\n\n    // Events\n    const { onDeleteAccountClick } = this.props;\n\n    const {\n      profileCompletion,\n      securityRating,\n      showingField,\n      performingAction,\n      loadingAvatar,\n      avatar,\n      avatarUrl,\n      firstName,\n      lastName,\n      username,\n      emailAddress,\n      sentVerificationEmail,\n      errors\n    } = this.state;\n\n    const hasFirstName = userData && userData.firstName;\n    const hasLastName = userData && userData.lastName;\n    const hasUsername = userData && userData.username;\n\n    return (\n      <DialogContent classes={{ root: classes.dialogContent }}>\n        <Box mb={2}>\n          <Hidden xsDown>\n            <Grid alignItems=\"center\" container>\n              <Grid item xs>\n                <Box textAlign=\"center\">\n                  <Box mb={1.5}>\n                    {avatar && avatarUrl && (\n                      <Badge\n                        classes={{ badge: classes.badge }}\n                        badgeContent={\n                          <Tooltip title=\"Remove\">\n                            <Fab\n                              classes={{ sizeSmall: classes.small }}\n                              color=\"secondary\"\n                              disabled={performingAction}\n                              size=\"small\"\n                              onClick={this.removeAvatar}\n                            >\n                              <CloseIcon fontSize=\"small\" />\n                            </Fab>\n                          </Tooltip>\n                        }\n                      >\n                        {loadingAvatar && (\n                          <Badge\n                            classes={{ badge: classes.loadingBadge }}\n                            badgeContent={\n                              <Fade\n                                style={{ transitionDelay: \"1s\" }}\n                                in={loadingAvatar}\n                                unmountOnExit\n                              >\n                                <CircularProgress size={120} thickness={1.8} />\n                              </Fade>\n                            }\n                          >\n                            <Avatar\n                              className={classes.avatar}\n                              alt=\"Avatar\"\n                              src={avatarUrl}\n                            />\n                          </Badge>\n                        )}\n\n                        {!loadingAvatar && (\n                          <Avatar\n                            className={classes.avatar}\n                            alt=\"Avatar\"\n                            src={avatarUrl}\n                          />\n                        )}\n                      </Badge>\n                    )}\n\n                    {!avatar && !avatarUrl && (\n                      <>\n                        {user.photoURL && (\n                          <Badge\n                            classes={{ badge: classes.badge }}\n                            badgeContent={\n                              <Tooltip title=\"Remove\">\n                                <Fab\n                                  classes={{ sizeSmall: classes.small }}\n                                  color=\"secondary\"\n                                  disabled={performingAction}\n                                  size=\"small\"\n                                  onClick={this.removeAvatar}\n                                >\n                                  <CloseIcon fontSize=\"small\" />\n                                </Fab>\n                              </Tooltip>\n                            }\n                          >\n                            {loadingAvatar && (\n                              <Badge\n                                classes={{ badge: classes.loadingBadge }}\n                                badgeContent={\n                                  <Fade\n                                    style={{ transitionDelay: \"1s\" }}\n                                    in={loadingAvatar}\n                                    unmountOnExit\n                                  >\n                                    <CircularProgress\n                                      size={120}\n                                      thickness={1.8}\n                                    />\n                                  </Fade>\n                                }\n                              >\n                                <Avatar\n                                  className={classes.avatar}\n                                  alt=\"Avatar\"\n                                  src={user.photoURL}\n                                />\n                              </Badge>\n                            )}\n\n                            {!loadingAvatar && (\n                              <Avatar\n                                className={classes.avatar}\n                                alt=\"Avatar\"\n                                src={user.photoURL}\n                              />\n                            )}\n                          </Badge>\n                        )}\n\n                        {!user.photoURL && (\n                          <>\n                            {loadingAvatar && (\n                              <Badge\n                                classes={{ badge: classes.loadingBadge }}\n                                badgeContent={\n                                  <Fade\n                                    style={{ transitionDelay: \"1s\" }}\n                                    in={loadingAvatar}\n                                    unmountOnExit\n                                  >\n                                    <CircularProgress\n                                      size={120}\n                                      thickness={1.8}\n                                    />\n                                  </Fade>\n                                }\n                              >\n                                <Avatar className={classes.avatar} alt=\"Avatar\">\n                                  {this.getNameInitialsOrIcon()}\n                                </Avatar>\n                              </Badge>\n                            )}\n\n                            {!loadingAvatar && (\n                              <Avatar className={classes.avatar} alt=\"Avatar\">\n                                {this.getNameInitialsOrIcon()}\n                              </Avatar>\n                            )}\n                          </>\n                        )}\n                      </>\n                    )}\n                  </Box>\n\n                  {avatar && avatarUrl && (\n                    <Button\n                      color=\"primary\"\n                      disabled={performingAction}\n                      startIcon={<CloudUploadIcon />}\n                      variant=\"contained\"\n                      onClick={this.uploadAvatar}\n                    >\n                      Upload\n                    </Button>\n                  )}\n\n                  {!avatar && !avatarUrl && (\n                    <>\n                      <input\n                        id=\"avatar-input\"\n                        type=\"file\"\n                        hidden\n                        accept=\"image/*\"\n                        onChange={this.handleAvatarChange}\n                      />\n\n                      <label htmlFor=\"avatar-input\">\n                        <Button\n                          color=\"primary\"\n                          component=\"span\"\n                          disabled={performingAction}\n                          startIcon={<PhotoIcon />}\n                          variant=\"contained\"\n                        >\n                          Choose...\n                        </Button>\n                      </label>\n                    </>\n                  )}\n                </Box>\n              </Grid>\n\n              <Grid item xs>\n                <Box textAlign=\"center\">\n                  <Typography variant=\"body1\">Profile completion</Typography>\n\n                  {profileCompletion === 0 && (\n                    <Typography color=\"error\" variant=\"h5\">\n                      {profileCompletion}%\n                    </Typography>\n                  )}\n\n                  {profileCompletion === 100 && (\n                    <Typography color=\"primary\" variant=\"h5\">\n                      {profileCompletion}%\n                    </Typography>\n                  )}\n\n                  {profileCompletion !== 0 && profileCompletion !== 100 && (\n                    <Typography color=\"secondary\" variant=\"h5\">\n                      {profileCompletion}%\n                    </Typography>\n                  )}\n                </Box>\n              </Grid>\n\n              <Grid item xs>\n                <Box textAlign=\"center\">\n                  <Typography variant=\"body1\">Security rating</Typography>\n\n                  {securityRating === 0 && (\n                    <Typography color=\"error\" variant=\"h5\">\n                      {securityRating}%\n                    </Typography>\n                  )}\n\n                  {securityRating === 100 && (\n                    <Typography color=\"primary\" variant=\"h5\">\n                      {securityRating}%\n                    </Typography>\n                  )}\n\n                  {securityRating !== 0 && securityRating !== 100 && (\n                    <Typography color=\"secondary\" variant=\"h5\">\n                      {securityRating}%\n                    </Typography>\n                  )}\n                </Box>\n              </Grid>\n            </Grid>\n          </Hidden>\n\n          <Hidden smUp>\n            <Box textAlign=\"center\" mb={3}>\n              <Box mb={1.5}>\n                {avatar && avatarUrl && (\n                  <Badge\n                    classes={{ badge: classes.badge }}\n                    badgeContent={\n                      <Tooltip title=\"Remove\">\n                        <Fab\n                          classes={{ sizeSmall: classes.small }}\n                          color=\"secondary\"\n                          disabled={performingAction}\n                          size=\"small\"\n                          onClick={this.removeAvatar}\n                        >\n                          <CloseIcon fontSize=\"small\" />\n                        </Fab>\n                      </Tooltip>\n                    }\n                  >\n                    {loadingAvatar && (\n                      <Badge\n                        classes={{ badge: classes.loadingBadge }}\n                        badgeContent={\n                          <Fade\n                            style={{ transitionDelay: \"1s\" }}\n                            in={loadingAvatar}\n                            unmountOnExit\n                          >\n                            <CircularProgress size={120} thickness={1.8} />\n                          </Fade>\n                        }\n                      >\n                        <Avatar\n                          className={classes.avatar}\n                          alt=\"Avatar\"\n                          src={avatarUrl}\n                        />\n                      </Badge>\n                    )}\n\n                    {!loadingAvatar && (\n                      <Avatar\n                        className={classes.avatar}\n                        alt=\"Avatar\"\n                        src={avatarUrl}\n                      />\n                    )}\n                  </Badge>\n                )}\n\n                {!avatar && !avatarUrl && (\n                  <>\n                    {user.photoURL && (\n                      <Badge\n                        classes={{ badge: classes.badge }}\n                        badgeContent={\n                          <Tooltip title=\"Remove\">\n                            <Fab\n                              classes={{ sizeSmall: classes.small }}\n                              color=\"secondary\"\n                              disabled={performingAction}\n                              size=\"small\"\n                              onClick={this.removeAvatar}\n                            >\n                              <CloseIcon fontSize=\"small\" />\n                            </Fab>\n                          </Tooltip>\n                        }\n                      >\n                        {loadingAvatar && (\n                          <Badge\n                            classes={{ badge: classes.loadingBadge }}\n                            badgeContent={\n                              <CircularProgress size={120} thickness={1.8} />\n                            }\n                          >\n                            <Avatar\n                              className={classes.avatar}\n                              alt=\"Avatar\"\n                              src={user.photoURL}\n                            />\n                          </Badge>\n                        )}\n\n                        {!loadingAvatar && (\n                          <Avatar\n                            className={classes.avatar}\n                            alt=\"Avatar\"\n                            src={user.photoURL}\n                          />\n                        )}\n                      </Badge>\n                    )}\n\n                    {!user.photoURL && (\n                      <>\n                        {loadingAvatar && (\n                          <Badge\n                            classes={{ badge: classes.loadingBadge }}\n                            badgeContent={\n                              <Fade\n                                style={{ transitionDelay: \"1s\" }}\n                                in={loadingAvatar}\n                                unmountOnExit\n                              >\n                                <CircularProgress size={120} thickness={1.8} />\n                              </Fade>\n                            }\n                          >\n                            <Avatar className={classes.avatar} alt=\"Avatar\">\n                              {this.getNameInitialsOrIcon()}\n                            </Avatar>\n                          </Badge>\n                        )}\n\n                        {!loadingAvatar && (\n                          <Avatar className={classes.avatar} alt=\"Avatar\">\n                            {this.getNameInitialsOrIcon()}\n                          </Avatar>\n                        )}\n                      </>\n                    )}\n                  </>\n                )}\n              </Box>\n\n              {avatar && avatarUrl && (\n                <Button\n                  color=\"primary\"\n                  disabled={performingAction}\n                  startIcon={<CloudUploadIcon />}\n                  variant=\"contained\"\n                  onClick={this.uploadAvatar}\n                >\n                  Upload\n                </Button>\n              )}\n\n              {!avatar && !avatarUrl && (\n                <>\n                  <input\n                    id=\"avatar-input\"\n                    type=\"file\"\n                    hidden\n                    accept=\"image/*\"\n                    onChange={this.handleAvatarChange}\n                  />\n\n                  <label htmlFor=\"avatar-input\">\n                    <Button\n                      color=\"primary\"\n                      component=\"span\"\n                      disabled={performingAction}\n                      startIcon={<PhotoIcon />}\n                      variant=\"contained\"\n                    >\n                      Choose...\n                    </Button>\n                  </label>\n                </>\n              )}\n            </Box>\n\n            <Grid container>\n              <Grid item xs>\n                <Box textAlign=\"center\">\n                  <Typography variant=\"body1\">Profile completion</Typography>\n\n                  {profileCompletion === 0 && (\n                    <Typography color=\"error\" variant=\"h5\">\n                      {profileCompletion}%\n                    </Typography>\n                  )}\n\n                  {profileCompletion === 100 && (\n                    <Typography color=\"primary\" variant=\"h5\">\n                      {profileCompletion}%\n                    </Typography>\n                  )}\n\n                  {profileCompletion !== 0 && profileCompletion !== 100 && (\n                    <Typography color=\"secondary\" variant=\"h5\">\n                      {profileCompletion}%\n                    </Typography>\n                  )}\n                </Box>\n              </Grid>\n\n              <Grid item xs>\n                <Box textAlign=\"center\">\n                  <Typography variant=\"body1\">Security rating</Typography>\n\n                  {securityRating === 0 && (\n                    <Typography color=\"error\" variant=\"h5\">\n                      {securityRating}%\n                    </Typography>\n                  )}\n\n                  {securityRating === 100 && (\n                    <Typography color=\"primary\" variant=\"h5\">\n                      {securityRating}%\n                    </Typography>\n                  )}\n\n                  {securityRating !== 0 && securityRating !== 100 && (\n                    <Typography color=\"secondary\" variant=\"h5\">\n                      {securityRating}%\n                    </Typography>\n                  )}\n                </Box>\n              </Grid>\n            </Grid>\n          </Hidden>\n        </Box>\n\n        <List disablePadding>\n          <ListItem>\n            <Hidden xsDown>\n              <ListItemIcon>\n                <PersonIcon />\n              </ListItemIcon>\n            </Hidden>\n\n            {!hasFirstName && (\n              <ListItemIcon>\n                <Tooltip title=\"No first name\">\n                  <WarningIcon color=\"error\" />\n                </Tooltip>\n              </ListItemIcon>\n            )}\n\n            {showingField === \"first-name\" && (\n              <TextField\n                autoComplete=\"given-name\"\n                autoFocus\n                disabled={performingAction}\n                error={!!(errors && errors.firstName)}\n                fullWidth\n                helperText={\n                  errors && errors.firstName\n                    ? errors.firstName[0]\n                    : \"Press Enter to change your first name\"\n                }\n                label=\"First name\"\n                placeholder={hasFirstName && userData.firstName}\n                required\n                type=\"text\"\n                value={firstName}\n                variant=\"filled\"\n                onBlur={this.hideFields}\n                onKeyDown={event => this.handleKeyDown(event, \"first-name\")}\n                onChange={this.handleFirstNameChange}\n              />\n            )}\n\n            {showingField !== \"first-name\" && (\n              <>\n                <ListItemText\n                  primary=\"First name\"\n                  secondary={\n                    hasFirstName\n                      ? userData.firstName\n                      : \"You don’t have a first name\"\n                  }\n                />\n\n                <ListItemSecondaryAction>\n                  {hasFirstName && (\n                    <Tooltip title=\"Change\">\n                      <div>\n                        <IconButton\n                          disabled={performingAction}\n                          onClick={() => this.showField(\"first-name\")}\n                        >\n                          <EditIcon />\n                        </IconButton>\n                      </div>\n                    </Tooltip>\n                  )}\n\n                  {!hasFirstName && (\n                    <Button\n                      color=\"primary\"\n                      disabled={performingAction}\n                      variant=\"contained\"\n                      onClick={() => this.showField(\"first-name\")}\n                    >\n                      Add\n                    </Button>\n                  )}\n                </ListItemSecondaryAction>\n              </>\n            )}\n          </ListItem>\n\n          <ListItem>\n            <Hidden xsDown>\n              <ListItemIcon>\n                <PersonIcon />\n              </ListItemIcon>\n            </Hidden>\n\n            {!hasLastName && (\n              <ListItemIcon>\n                <Tooltip title=\"No last name\">\n                  <WarningIcon color=\"error\" />\n                </Tooltip>\n              </ListItemIcon>\n            )}\n\n            {showingField === \"last-name\" && (\n              <TextField\n                autoComplete=\"family-name\"\n                autoFocus\n                disabled={performingAction}\n                error={!!(errors && errors.lastName)}\n                fullWidth\n                helperText={\n                  errors && errors.lastName\n                    ? errors.lastName[0]\n                    : \"Press Enter to change your last name\"\n                }\n                label=\"Last name\"\n                placeholder={hasLastName && userData.lastName}\n                required\n                type=\"text\"\n                value={lastName}\n                variant=\"filled\"\n                onBlur={this.hideFields}\n                onKeyDown={event => this.handleKeyDown(event, \"last-name\")}\n                onChange={this.handleLastNameChange}\n              />\n            )}\n\n            {showingField !== \"last-name\" && (\n              <>\n                <ListItemText\n                  primary=\"Last name\"\n                  secondary={\n                    hasLastName\n                      ? userData.lastName\n                      : \"You don’t have a last name\"\n                  }\n                />\n\n                <ListItemSecondaryAction>\n                  {hasLastName && (\n                    <Tooltip title=\"Change\">\n                      <div>\n                        <IconButton\n                          disabled={performingAction}\n                          onClick={() => this.showField(\"last-name\")}\n                        >\n                          <EditIcon />\n                        </IconButton>\n                      </div>\n                    </Tooltip>\n                  )}\n\n                  {!hasLastName && (\n                    <Button\n                      color=\"primary\"\n                      disabled={performingAction}\n                      variant=\"contained\"\n                      onClick={() => this.showField(\"last-name\")}\n                    >\n                      Add\n                    </Button>\n                  )}\n                </ListItemSecondaryAction>\n              </>\n            )}\n          </ListItem>\n\n          <ListItem>\n            <Hidden xsDown>\n              <ListItemIcon>\n                <PersonOutlineIcon />\n              </ListItemIcon>\n            </Hidden>\n\n            {!hasUsername && (\n              <ListItemIcon>\n                <Tooltip title=\"No username\">\n                  <WarningIcon color=\"error\" />\n                </Tooltip>\n              </ListItemIcon>\n            )}\n\n            {showingField === \"username\" && (\n              <TextField\n                autoComplete=\"username\"\n                autoFocus\n                disabled={performingAction}\n                error={!!(errors && errors.username)}\n                fullWidth\n                helperText={\n                  errors && errors.username\n                    ? errors.username[0]\n                    : \"Press Enter to change your username\"\n                }\n                label=\"Username\"\n                placeholder={hasUsername && userData.username}\n                required\n                type=\"text\"\n                value={username}\n                variant=\"filled\"\n                onBlur={this.hideFields}\n                onKeyDown={event => this.handleKeyDown(event, \"username\")}\n                onChange={this.handleUsernameChange}\n              />\n            )}\n\n            {showingField !== \"username\" && (\n              <>\n                <ListItemText\n                  primary=\"Username\"\n                  secondary={\n                    hasUsername\n                      ? userData.username\n                      : \"You don’t have a username\"\n                  }\n                />\n\n                <ListItemSecondaryAction>\n                  {hasUsername && (\n                    <Tooltip title=\"Change\">\n                      <div>\n                        <IconButton\n                          disabled={performingAction}\n                          onClick={() => this.showField(\"username\")}\n                        >\n                          <EditIcon />\n                        </IconButton>\n                      </div>\n                    </Tooltip>\n                  )}\n\n                  {!hasUsername && (\n                    <Button\n                      color=\"primary\"\n                      disabled={performingAction}\n                      variant=\"contained\"\n                      onClick={() => this.showField(\"username\")}\n                    >\n                      Add\n                    </Button>\n                  )}\n                </ListItemSecondaryAction>\n              </>\n            )}\n          </ListItem>\n\n          <ListItem>\n            <Hidden xsDown>\n              <ListItemIcon>\n                <EmailIcon />\n              </ListItemIcon>\n            </Hidden>\n\n            {user.email && (\n              <ListItemIcon>\n                <>\n                  {user.emailVerified && (\n                    <Tooltip title=\"Verified\">\n                      <CheckIcon color=\"primary\" />\n                    </Tooltip>\n                  )}\n\n                  {!user.emailVerified && (\n                    <Tooltip title=\"Not verified\">\n                      <WarningIcon color=\"error\" />\n                    </Tooltip>\n                  )}\n                </>\n              </ListItemIcon>\n            )}\n\n            {!user.email && (\n              <ListItemIcon>\n                <Tooltip title=\"No e-mail address\">\n                  <WarningIcon color=\"error\" />\n                </Tooltip>\n              </ListItemIcon>\n            )}\n\n            {showingField === \"email-address\" && (\n              <TextField\n                autoComplete=\"email\"\n                autoFocus\n                disabled={performingAction}\n                error={!!(errors && errors.emailAddress)}\n                fullWidth\n                helperText={\n                  errors && errors.emailAddress\n                    ? errors.emailAddress[0]\n                    : \"Press Enter to change your e-mail address\"\n                }\n                label=\"E-mail address\"\n                placeholder={user.email}\n                required\n                type=\"email\"\n                value={emailAddress}\n                variant=\"filled\"\n                onBlur={this.hideFields}\n                onKeyDown={event => this.handleKeyDown(event, \"email-address\")}\n                onChange={this.handleEmailAddressChange}\n              />\n            )}\n\n            {showingField !== \"email-address\" && (\n              <>\n                <ListItemText\n                  primary=\"E-mail address\"\n                  secondary={\n                    user.email ? user.email : \"You don’t have an e-mail address\"\n                  }\n                />\n\n                {user.email && !user.emailVerified && (\n                  <Box clone mr={7}>\n                    <ListItemSecondaryAction>\n                      <Tooltip title=\"Verify\">\n                        <div>\n                          <IconButton\n                            color=\"secondary\"\n                            disabled={performingAction || sentVerificationEmail}\n                            onClick={this.verifyEmailAddress}\n                          >\n                            <CheckIcon />\n                          </IconButton>\n                        </div>\n                      </Tooltip>\n                    </ListItemSecondaryAction>\n                  </Box>\n                )}\n\n                <ListItemSecondaryAction>\n                  {user.email && (\n                    <Tooltip title=\"Change\">\n                      <div>\n                        <IconButton\n                          disabled={performingAction}\n                          onClick={() => this.showField(\"email-address\")}\n                        >\n                          <EditIcon />\n                        </IconButton>\n                      </div>\n                    </Tooltip>\n                  )}\n\n                  {!user.email && (\n                    <Button\n                      color=\"primary\"\n                      disabled={performingAction}\n                      variant=\"contained\"\n                      onClick={() => this.showField(\"email-address\")}\n                    >\n                      Add\n                    </Button>\n                  )}\n                </ListItemSecondaryAction>\n              </>\n            )}\n          </ListItem>\n\n          <ListItem>\n            <Hidden xsDown>\n              <ListItemIcon>\n                <AccessTimeIcon />\n              </ListItemIcon>\n            </Hidden>\n\n            <Hidden xsDown>\n              <ListItemText\n                primary=\"Signed in\"\n                secondary={moment(user.metadata.lastSignInTime).format(\"LLLL\")}\n              />\n            </Hidden>\n\n            <Hidden smUp>\n              <ListItemText\n                primary=\"Signed in\"\n                secondary={moment(user.metadata.lastSignInTime).format(\"llll\")}\n              />\n            </Hidden>\n          </ListItem>\n\n          <Box mt={1} mb={1}>\n            <Divider light />\n          </Box>\n\n          <ListItem>\n            <Hidden xsDown>\n              <ListItemIcon>\n                <DeleteForeverIcon />\n              </ListItemIcon>\n            </Hidden>\n\n            <ListItemText\n              primary=\"Delete account\"\n              secondary=\"Accounts can’t be recovered\"\n            />\n\n            <ListItemSecondaryAction>\n              <Button\n                color=\"secondary\"\n                disabled={performingAction}\n                variant=\"contained\"\n                onClick={onDeleteAccountClick}\n              >\n                Delete\n              </Button>\n            </ListItemSecondaryAction>\n          </ListItem>\n        </List>\n      </DialogContent>\n    );\n  }\n\n  componentDidMount() {\n    const { user, userData } = this.props;\n\n    this.setState({\n      profileCompletion: authentication.getProfileCompletion({\n        ...user,\n        ...userData\n      }),\n      securityRating: authentication.getSecurityRating(user, userData)\n    });\n  }\n\n  componentWillUnmount() {\n    const { avatarUrl } = this.state;\n\n    if (avatarUrl) {\n      URL.revokeObjectURL(avatarUrl);\n\n      this.setState({\n        avatarUrl: \"\"\n      });\n    }\n  }\n}\n\nAccountTab.propTypes = {\n  // Styling\n  classes: PropTypes.object.isRequired,\n\n  // Properties\n  user: PropTypes.object.isRequired,\n  userData: PropTypes.object,\n\n  // Functions\n  openSnackbar: PropTypes.func.isRequired,\n\n  // Events\n  onDeleteAccountClick: PropTypes.func.isRequired\n};\n\nexport default withStyles(styles)(AccountTab);\n","import React, { Component } from \"react\";\n\nimport PropTypes from \"prop-types\";\n\nimport DialogContent from \"@material-ui/core/DialogContent\";\n\nimport Box from \"@material-ui/core/Box\";\n\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport ListItemSecondaryAction from \"@material-ui/core/ListItemSecondaryAction\";\n\nimport FormControl from \"@material-ui/core/FormControl\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport Select from \"@material-ui/core/Select\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport Divider from \"@material-ui/core/Divider\";\nimport Hidden from \"@material-ui/core/Hidden\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport Switch from \"@material-ui/core/Switch\";\nimport Button from \"@material-ui/core/Button\";\n\nimport FiberManualRecord from \"@material-ui/icons/FiberManualRecord\";\nimport Brightness4Icon from \"@material-ui/icons/Brightness4\";\nimport FormatColorResetIcon from \"@material-ui/icons/FormatColorReset\";\n\nimport appearance from \"../../services/appearance\";\n\nclass AppearanceTab extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      performingAction: false,\n      primaryColorLabelWidth: 0,\n      secondaryColorLabelWidth: 0\n    };\n\n    this.primaryColorLabel = React.createRef();\n    this.secondaryColorLabel = React.createRef();\n  }\n\n  handlePrimaryColorChange = event => {\n    if (!event) {\n      return;\n    }\n\n    const primaryColor = event.target.value;\n\n    if (!primaryColor) {\n      return;\n    }\n\n    const { theme } = this.props;\n\n    if (!theme) {\n      return;\n    }\n\n    if (theme.primaryColor.id === primaryColor) {\n      return;\n    }\n\n    this.setState(\n      {\n        performingAction: true\n      },\n      () => {\n        appearance\n          .changeTheme({\n            primaryColor: primaryColor,\n            secondaryColor: theme.secondaryColor.id,\n            dark: theme.dark\n          })\n          .catch(reason => {\n            const code = reason.code;\n            const message = reason.message;\n\n            switch (code) {\n              default:\n                this.props.openSnackbar(message);\n                return;\n            }\n          })\n          .finally(() => {\n            this.setState({\n              performingAction: false\n            });\n          });\n      }\n    );\n  };\n\n  handleSecondaryColorChange = event => {\n    if (!event) {\n      return;\n    }\n\n    const secondaryColor = event.target.value;\n\n    if (!secondaryColor) {\n      return;\n    }\n\n    const { theme } = this.props;\n\n    if (!theme) {\n      return;\n    }\n\n    if (theme.secondaryColor.id === secondaryColor) {\n      return;\n    }\n\n    this.setState(\n      {\n        performingAction: true\n      },\n      () => {\n        appearance\n          .changeTheme({\n            primaryColor: theme.primaryColor.id,\n            secondaryColor: secondaryColor,\n            dark: theme.dark\n          })\n          .catch(reason => {\n            const code = reason.code;\n            const message = reason.message;\n\n            switch (code) {\n              default:\n                this.props.openSnackbar(message);\n                return;\n            }\n          })\n          .finally(() => {\n            this.setState({\n              performingAction: false\n            });\n          });\n      }\n    );\n  };\n\n  handleDarkModeChange = event => {\n    if (!event) {\n      return;\n    }\n\n    const dark = event.target.checked;\n\n    const { theme } = this.props;\n\n    if (!theme) {\n      return;\n    }\n\n    if (theme.dark === dark) {\n      return;\n    }\n\n    this.setState(\n      {\n        performingAction: true\n      },\n      () => {\n        appearance\n          .changeTheme({\n            primaryColor: theme.primaryColor.id,\n            secondaryColor: theme.secondaryColor.id,\n            dark: dark\n          })\n          .catch(reason => {\n            const code = reason.code;\n            const message = reason.message;\n\n            switch (code) {\n              default:\n                this.props.openSnackbar(message);\n                return;\n            }\n          })\n          .finally(() => {\n            this.setState({\n              performingAction: false\n            });\n          });\n      }\n    );\n  };\n\n  handleResetThemeClick = () => {\n    const { theme } = this.props;\n\n    if (!theme) {\n      return;\n    }\n\n    if (appearance.isDefaultTheme(theme)) {\n      return;\n    }\n\n    this.setState(\n      {\n        performingAction: true\n      },\n      () => {\n        appearance\n          .resetTheme()\n          .catch(reason => {\n            const code = reason.code;\n            const message = reason.message;\n\n            switch (code) {\n              default:\n                this.props.openSnackbar(message);\n                return;\n            }\n          })\n          .finally(() => {\n            this.setState({\n              performingAction: false\n            });\n          });\n      }\n    );\n  };\n\n  render() {\n    // Properties\n    const { theme } = this.props;\n\n    if (!theme) {\n      return null;\n    }\n\n    const {\n      performingAction,\n      primaryColorLabelWidth,\n      secondaryColorLabelWidth\n    } = this.state;\n\n    return (\n      <DialogContent>\n        <List disablePadding>\n          <Box mb={1}>\n            <ListItem>\n              <Hidden xsDown>\n                <ListItemIcon>\n                  <FiberManualRecord color=\"primary\" />\n                </ListItemIcon>\n              </Hidden>\n\n              <FormControl\n                disabled={performingAction}\n                fullWidth\n                variant=\"outlined\"\n              >\n                <InputLabel ref={this.primaryColorLabel}>\n                  Primary color\n                </InputLabel>\n\n                <Hidden smUp>\n                  <Select\n                    native\n                    value={theme.primaryColor.id}\n                    labelWidth={primaryColorLabelWidth}\n                    onChange={this.handlePrimaryColorChange}\n                  >\n                    {Object.keys(appearance.colors).map(color => {\n                      color = appearance.colors[color];\n\n                      return (\n                        <option key={color.id} value={color.id}>\n                          {color.name}\n                        </option>\n                      );\n                    })}\n                  </Select>\n                </Hidden>\n\n                <Hidden xsDown>\n                  <Select\n                    value={theme.primaryColor.id}\n                    labelWidth={primaryColorLabelWidth}\n                    onChange={this.handlePrimaryColorChange}\n                  >\n                    {Object.keys(appearance.colors).map(color => {\n                      color = appearance.colors[color];\n\n                      return (\n                        <MenuItem key={color.id} value={color.id}>\n                          {color.name}\n                        </MenuItem>\n                      );\n                    })}\n                  </Select>\n                </Hidden>\n              </FormControl>\n            </ListItem>\n          </Box>\n\n          <Box mb={1}>\n            <ListItem>\n              <Hidden xsDown>\n                <ListItemIcon>\n                  <FiberManualRecord color=\"secondary\" />\n                </ListItemIcon>\n              </Hidden>\n\n              <FormControl\n                disabled={performingAction}\n                fullWidth\n                variant=\"outlined\"\n              >\n                <InputLabel ref={this.secondaryColorLabel}>\n                  Secondary color\n                </InputLabel>\n\n                <Hidden smUp>\n                  <Select\n                    native\n                    value={theme.secondaryColor.id}\n                    labelWidth={secondaryColorLabelWidth}\n                    onChange={this.handleSecondaryColorChange}\n                  >\n                    {Object.keys(appearance.colors).map(color => {\n                      color = appearance.colors[color];\n\n                      return (\n                        <option key={color.id} value={color.id}>\n                          {color.name}\n                        </option>\n                      );\n                    })}\n                  </Select>\n                </Hidden>\n\n                <Hidden xsDown>\n                  <Select\n                    value={theme.secondaryColor.id}\n                    labelWidth={secondaryColorLabelWidth}\n                    onChange={this.handleSecondaryColorChange}\n                  >\n                    {Object.keys(appearance.colors).map(color => {\n                      color = appearance.colors[color];\n\n                      return (\n                        <MenuItem key={color.id} value={color.id}>\n                          {color.name}\n                        </MenuItem>\n                      );\n                    })}\n                  </Select>\n                </Hidden>\n              </FormControl>\n            </ListItem>\n          </Box>\n\n          <ListItem>\n            <Hidden xsDown>\n              <ListItemIcon>\n                <Brightness4Icon />\n              </ListItemIcon>\n            </Hidden>\n\n            <ListItemText\n              primary=\"Dark mode\"\n              secondary=\"Displays mostly dark surfaces\"\n            />\n\n            <ListItemSecondaryAction>\n              <Hidden xsDown>\n                <Checkbox\n                  color=\"primary\"\n                  checked={theme.dark}\n                  onChange={this.handleDarkModeChange}\n                />\n              </Hidden>\n\n              <Hidden smUp>\n                <Switch\n                  color=\"primary\"\n                  checked={theme.dark}\n                  onChange={this.handleDarkModeChange}\n                />\n              </Hidden>\n            </ListItemSecondaryAction>\n          </ListItem>\n\n          <Box mt={2} mb={1}>\n            <Divider light />\n          </Box>\n\n          <ListItem>\n            <Hidden xsDown>\n              <ListItemIcon>\n                <FormatColorResetIcon />\n              </ListItemIcon>\n            </Hidden>\n\n            <ListItemText\n              primary=\"Reset theme\"\n              secondary={\n                appearance.isDefaultTheme(theme)\n                  ? \"No changes made\"\n                  : \"Changes will be reset\"\n              }\n            />\n\n            <ListItemSecondaryAction>\n              <Button\n                color=\"secondary\"\n                disabled={appearance.isDefaultTheme(theme) || performingAction}\n                variant=\"contained\"\n                onClick={this.handleResetThemeClick}\n              >\n                Reset\n              </Button>\n            </ListItemSecondaryAction>\n          </ListItem>\n        </List>\n      </DialogContent>\n    );\n  }\n\n  componentDidMount() {\n    this.setState({\n      primaryColorLabelWidth: this.primaryColorLabel.current.offsetWidth,\n      secondaryColorLabelWidth: this.secondaryColorLabel.current.offsetWidth\n    });\n  }\n}\n\nAppearanceTab.propTypes = {\n  // Properties\n  theme: PropTypes.object.isRequired,\n\n  // Functions\n  openSnackbar: PropTypes.func.isRequired\n};\n\nexport default AppearanceTab;\n","import React, { Component } from \"react\";\n\nimport PropTypes from \"prop-types\";\n\nimport DialogContent from \"@material-ui/core/DialogContent\";\n\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport ListItemSecondaryAction from \"@material-ui/core/ListItemSecondaryAction\";\n\nimport Box from \"@material-ui/core/Box\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport IconButton from \"@material-ui/core/IconButton\";\n\nimport LinkIcon from \"@material-ui/icons/Link\";\nimport LinkOffIcon from \"@material-ui/icons/LinkOff\";\n\nimport authProviders from \"../../authProviders\";\n\nimport authentication from \"../../services/authentication\";\n\nclass LinksTab extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      performingAction: false\n    };\n  }\n\n  linkAuthProvider = authProvider => {\n    this.setState(\n      {\n        performingAction: true\n      },\n      () => {\n        authentication\n          .linkAuthProvider(authProvider.providerId)\n          .then(value => {\n            this.props.openSnackbar(`${authProvider.name} linked`, 5);\n          })\n          .catch(reason => {\n            const code = reason.code;\n            const message = reason.message;\n\n            switch (code) {\n              default:\n                this.props.openSnackbar(message);\n                return;\n            }\n          })\n          .finally(() => {\n            this.setState({\n              performingAction: false\n            });\n          });\n      }\n    );\n  };\n\n  unlinkAuthProvider = authProvider => {\n    this.setState(\n      {\n        performingAction: true\n      },\n      () => {\n        authentication\n          .unlinkAuthProvider(authProvider.providerId)\n          .then(value => {\n            this.props.openSnackbar(`${authProvider.name} unlinked`, 4);\n          })\n          .catch(reason => {\n            const code = reason.code;\n            const message = reason.message;\n\n            switch (code) {\n              default:\n                this.props.openSnackbar(message);\n                return;\n            }\n          })\n          .finally(() => {\n            this.setState({\n              performingAction: false\n            });\n          });\n      }\n    );\n  };\n\n  render() {\n    // Properties\n    const { theme } = this.props;\n\n    const { performingAction } = this.state;\n\n    return (\n      <DialogContent>\n        <List disablePadding>\n          {authProviders.map(authProvider => {\n            const authProviderData = authentication.authProviderData(\n              authProvider.providerId\n            );\n            let identifier = null;\n\n            if (authProviderData) {\n              const displayName = authProviderData.displayName;\n              const emailAddress = authProviderData.email;\n              const phoneNumber = authProviderData.phoneNumber;\n\n              identifier = displayName || emailAddress || phoneNumber;\n            }\n\n            return (\n              <ListItem key={authProvider.providerId}>\n                <ListItemIcon>\n                  <Box color={theme.dark ? null : authProvider.color}>\n                    {authProvider.icon}\n                  </Box>\n                </ListItemIcon>\n\n                {authProviderData && (\n                  <ListItemText\n                    primary={authProvider.name}\n                    secondary={identifier}\n                  />\n                )}\n\n                {!authProviderData && (\n                  <ListItemText primary={authProvider.name} />\n                )}\n\n                <ListItemSecondaryAction>\n                  {authProviderData && (\n                    <Tooltip title=\"Unlink\">\n                      <div>\n                        <IconButton\n                          disabled={performingAction}\n                          onClick={() => this.unlinkAuthProvider(authProvider)}\n                        >\n                          <LinkOffIcon />\n                        </IconButton>\n                      </div>\n                    </Tooltip>\n                  )}\n\n                  {!authProviderData && (\n                    <Tooltip title=\"Link\">\n                      <div>\n                        <IconButton\n                          disabled={performingAction}\n                          onClick={() => this.linkAuthProvider(authProvider)}\n                        >\n                          <LinkIcon />\n                        </IconButton>\n                      </div>\n                    </Tooltip>\n                  )}\n                </ListItemSecondaryAction>\n              </ListItem>\n            );\n          })}\n        </List>\n      </DialogContent>\n    );\n  }\n}\n\nLinksTab.propTypes = {\n  // Properties\n  theme: PropTypes.object.isRequired,\n\n  // Functions\n  openSnackbar: PropTypes.func.isRequired\n};\n\nexport default LinksTab;\n","import React, { Component } from \"react\";\n\nimport PropTypes from \"prop-types\";\n\nimport validate from \"validate.js\";\nimport moment from \"moment\";\n\nimport DialogContent from \"@material-ui/core/DialogContent\";\n\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport ListItemSecondaryAction from \"@material-ui/core/ListItemSecondaryAction\";\n\nimport Hidden from \"@material-ui/core/Hidden\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport IconButton from \"@material-ui/core/IconButton\";\n\nimport LockIcon from \"@material-ui/icons/Lock\";\nimport EditIcon from \"@material-ui/icons/Edit\";\n\nimport constraints from \"../../constraints\";\nimport authentication from \"../../services/authentication\";\n\nconst initialState = {\n  showingField: \"\",\n  password: \"\",\n  passwordConfirmation: \"\",\n  performingAction: false,\n  errors: null\n};\n\nclass SecurityTab extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = initialState;\n  }\n\n  showField = fieldId => {\n    if (!fieldId) {\n      return;\n    }\n\n    this.setState({\n      showingField: fieldId\n    });\n  };\n\n  hideFields = callback => {\n    this.setState(\n      {\n        showingField: \"\",\n        password: \"\",\n        passwordConfirmation: \"\",\n        errors: null\n      },\n      () => {\n        if (callback && typeof callback === \"function\") {\n          callback();\n        }\n      }\n    );\n  };\n\n  changeField = fieldId => {\n    switch (fieldId) {\n      case \"password\":\n        const { password } = this.state;\n\n        const errors = validate(\n          {\n            password: password\n          },\n          {\n            password: constraints.password\n          }\n        );\n\n        if (errors) {\n          this.setState({\n            errors: errors\n          });\n\n          return;\n        }\n\n        this.setState(\n          {\n            errors: null\n          },\n          () => {\n            this.showField(\"password-confirmation\");\n          }\n        );\n        return;\n\n      case \"password-confirmation\":\n        this.changePassword();\n        return;\n\n      default:\n        return;\n    }\n  };\n\n  changePassword = () => {\n    const { password, passwordConfirmation } = this.state;\n\n    const errors = validate(\n      {\n        password: password,\n        passwordConfirmation: passwordConfirmation\n      },\n      {\n        password: constraints.password,\n        passwordConfirmation: constraints.passwordConfirmation\n      }\n    );\n\n    if (errors) {\n      this.setState({\n        errors: errors\n      });\n\n      return;\n    }\n\n    this.setState(\n      {\n        errors: null\n      },\n      () => {\n        this.setState(\n          {\n            performingAction: true\n          },\n          () => {\n            authentication\n              .changePassword(password)\n              .then(() => {\n                this.hideFields(() => {\n                  this.props.openSnackbar(\"Changed password\");\n                });\n              })\n              .catch(reason => {\n                const code = reason.code;\n                const message = reason.message;\n\n                switch (code) {\n                  default:\n                    this.props.openSnackbar(message);\n                    return;\n                }\n              })\n              .finally(() => {\n                this.setState({\n                  performingAction: false\n                });\n              });\n          }\n        );\n      }\n    );\n  };\n\n  handleKeyDown = (event, fieldId) => {\n    if (!event || !fieldId) {\n      return;\n    }\n\n    if (event.altKey || event.ctrlKey || event.metaKey || event.shiftKey) {\n      return;\n    }\n\n    const key = event.key;\n\n    if (!key) {\n      return;\n    }\n\n    if (key === \"Escape\") {\n      this.hideFields();\n    } else if (key === \"Enter\") {\n      this.changeField(fieldId);\n    }\n  };\n\n  handlePasswordChange = event => {\n    if (!event) {\n      return;\n    }\n\n    const password = event.target.value;\n\n    this.setState({\n      password: password\n    });\n  };\n\n  handlePasswordConfirmationChange = event => {\n    if (!event) {\n      return;\n    }\n\n    const passwordConfirmation = event.target.value;\n\n    this.setState({\n      passwordConfirmation: passwordConfirmation\n    });\n  };\n\n  render() {\n    // Properties\n    const { userData } = this.props;\n\n    const {\n      showingField,\n      password,\n      passwordConfirmation,\n      performingAction,\n      errors\n    } = this.state;\n\n    const hasChangedPassword = userData && userData.lastPasswordChange;\n\n    return (\n      <DialogContent>\n        <List disablePadding>\n          <ListItem>\n            <Hidden xsDown>\n              <ListItemIcon>\n                <LockIcon />\n              </ListItemIcon>\n            </Hidden>\n\n            {showingField === \"password\" && (\n              <TextField\n                autoComplete=\"new-password\"\n                autoFocus\n                disabled={performingAction}\n                error={!!(errors && errors.password)}\n                fullWidth\n                helperText={\n                  errors && errors.password\n                    ? errors.password[0]\n                    : \"Press Enter to change your password\"\n                }\n                label=\"Password\"\n                required\n                type=\"password\"\n                value={password}\n                variant=\"filled\"\n                onBlur={this.hideFields}\n                onKeyDown={event => this.handleKeyDown(event, \"password\")}\n                onChange={this.handlePasswordChange}\n              />\n            )}\n\n            {showingField === \"password-confirmation\" && (\n              <TextField\n                autoComplete=\"new-password\"\n                autoFocus\n                disabled={performingAction}\n                error={!!(errors && errors.passwordConfirmation)}\n                fullWidth\n                helperText={\n                  errors && errors.passwordConfirmation\n                    ? errors.passwordConfirmation[0]\n                    : \"Press Enter to change your password\"\n                }\n                label=\"Password confirmation\"\n                required\n                type=\"password\"\n                value={passwordConfirmation}\n                variant=\"filled\"\n                onBlur={this.hideFields}\n                onKeyDown={event =>\n                  this.handleKeyDown(event, \"password-confirmation\")\n                }\n                onChange={this.handlePasswordConfirmationChange}\n              />\n            )}\n\n            {showingField !== \"password\" &&\n              showingField !== \"password-confirmation\" && (\n                <>\n                  <Hidden xsDown>\n                    <ListItemText\n                      primary=\"Password\"\n                      secondary={\n                        hasChangedPassword\n                          ? `Last changed ${moment(\n                              userData.lastPasswordChange.toDate()\n                            ).format(\"LL\")}`\n                          : \"Never changed\"\n                      }\n                    />\n                  </Hidden>\n\n                  <Hidden smUp>\n                    <ListItemText\n                      primary=\"Password\"\n                      secondary={\n                        hasChangedPassword\n                          ? `Last changed ${moment(\n                              userData.lastPasswordChange.toDate()\n                            ).format(\"ll\")}`\n                          : \"Never changed\"\n                      }\n                    />\n                  </Hidden>\n\n                  <ListItemSecondaryAction>\n                    <Tooltip title=\"Change\">\n                      <div>\n                        <IconButton\n                          disabled={performingAction}\n                          onClick={() => this.showField(\"password\")}\n                        >\n                          <EditIcon />\n                        </IconButton>\n                      </div>\n                    </Tooltip>\n                  </ListItemSecondaryAction>\n                </>\n              )}\n          </ListItem>\n        </List>\n      </DialogContent>\n    );\n  }\n}\n\nSecurityTab.propTypes = {\n  // Properties\n  userData: PropTypes.object,\n\n  // Functions\n  openSnackbar: PropTypes.func.isRequired\n};\n\nexport default SecurityTab;\n","import React, { Component } from \"react\";\n\nimport PropTypes from \"prop-types\";\n\nimport { withStyles } from \"@material-ui/core/styles\";\n\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\n\nimport Typography from \"@material-ui/core/Typography\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport IconButton from \"@material-ui/core/IconButton\";\n\nimport Tabs from \"@material-ui/core/Tabs\";\nimport Tab from \"@material-ui/core/Tab\";\n\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport AccountCircleIcon from \"@material-ui/icons/AccountCircle\";\nimport PaletteIcon from \"@material-ui/icons/Palette\";\nimport LinkIcon from \"@material-ui/icons/Link\";\nimport SecurityIcon from \"@material-ui/icons/Security\";\n\nimport SwipeableViews from \"react-swipeable-views\";\n\nimport AccountTab from \"../AccountTab\";\nimport AppearanceTab from \"../AppearanceTab\";\nimport LinksTab from \"../LinksTab\";\nimport SecurityTab from \"../SecurityTab\";\n\nconst styles = theme => ({\n  closeButton: {\n    position: \"absolute\",\n    right: theme.spacing(1),\n    top: theme.spacing(1)\n  },\n\n  tabs: {\n    display: \"initial\"\n  }\n});\n\nconst tabs = [\n  {\n    key: \"account\",\n    icon: <AccountCircleIcon />,\n    label: \"Account\"\n  },\n\n  {\n    key: \"appearance\",\n    icon: <PaletteIcon />,\n    label: \"Appearance\"\n  },\n\n  {\n    key: \"links\",\n    icon: <LinkIcon />,\n    label: \"Links\"\n  },\n\n  {\n    key: \"security\",\n    icon: <SecurityIcon />,\n    label: \"Security\"\n  }\n];\n\nconst initialState = {\n  selectedTab: 0\n};\n\nclass SettingsDialog extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = initialState;\n  }\n\n  handleExited = () => {\n    this.setState(initialState);\n  };\n\n  handleTabChange = (event, value) => {\n    this.setState({\n      selectedTab: value\n    });\n  };\n\n  handleIndexChange = index => {\n    this.setState({\n      selectedTab: index\n    });\n  };\n\n  render() {\n    // Styling\n    const { classes } = this.props;\n\n    // Dialog Properties\n    const { dialogProps } = this.props;\n\n    // Custom Properties\n    const { user, userData, theme } = this.props;\n\n    // Custom Functions\n    const { openSnackbar } = this.props;\n\n    // Custom Functions\n    const { onDeleteAccountClick } = this.props;\n\n    const { selectedTab } = this.state;\n\n    return (\n      <Dialog {...dialogProps} onExited={this.handleExited}>\n        <DialogTitle disableTypography>\n          <Typography variant=\"h6\">Settings</Typography>\n\n          <Tooltip title=\"Close\">\n            <IconButton\n              className={classes.closeButton}\n              onClick={dialogProps.onClose}\n            >\n              <CloseIcon />\n            </IconButton>\n          </Tooltip>\n        </DialogTitle>\n\n        <Tabs\n          classes={{ root: classes.tabs }}\n          style={{ overflow: \"initial\", minHeight: \"initial\" }}\n          indicatorColor=\"primary\"\n          textColor=\"primary\"\n          value={selectedTab}\n          variant=\"fullWidth\"\n          onChange={this.handleTabChange}\n        >\n          {tabs.map(tab => {\n            return <Tab key={tab.key} icon={tab.icon} label={tab.label} />;\n          })}\n        </Tabs>\n\n        <SwipeableViews\n          index={selectedTab}\n          onChangeIndex={this.handleIndexChange}\n        >\n          <AccountTab\n            user={user}\n            userData={userData}\n            openSnackbar={openSnackbar}\n            onDeleteAccountClick={onDeleteAccountClick}\n          />\n\n          <AppearanceTab theme={theme} openSnackbar={openSnackbar} />\n\n          <LinksTab theme={theme} openSnackbar={openSnackbar} />\n\n          <SecurityTab\n            user={user}\n            userData={userData}\n            openSnackbar={openSnackbar}\n          />\n        </SwipeableViews>\n      </Dialog>\n    );\n  }\n}\n\nSettingsDialog.propTypes = {\n  // Styling\n  classes: PropTypes.object.isRequired,\n\n  // Dialog Properties\n  dialogProps: PropTypes.object.isRequired,\n\n  // Custom Properties\n  theme: PropTypes.object.isRequired,\n  user: PropTypes.object.isRequired,\n  userData: PropTypes.object,\n\n  // Custom Functions\n  openSnackbar: PropTypes.func.isRequired,\n\n  // Custom Events\n  onDeleteAccountClick: PropTypes.func.isRequired\n};\n\nexport default withStyles(styles)(SettingsDialog);\n","import React, { Component } from \"react\";\n\nimport PropTypes from \"prop-types\";\n\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\n\nimport Hidden from \"@material-ui/core/Hidden\";\nimport Box from \"@material-ui/core/Box\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\n\nconst initialState = {\n  username: \"\"\n};\n\nclass DeleteAccountDialog extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = initialState;\n  }\n\n  handleKeyPress = event => {\n    const { userData } = this.props;\n\n    if (userData && userData.username) {\n      const { username } = this.state;\n\n      if (!username) {\n        return;\n      }\n\n      if (username !== userData.username) {\n        return;\n      }\n    }\n\n    const key = event.key;\n\n    if (event.altKey || event.ctrlKey || event.metaKey || event.shiftKey) {\n      return;\n    }\n\n    if (key === \"Enter\") {\n      this.props.deleteAccount();\n    }\n  };\n\n  handleExited = () => {\n    this.setState(initialState);\n  };\n\n  handleUsernameChange = event => {\n    const username = event.target.value;\n\n    this.setState({\n      username: username\n    });\n  };\n\n  render() {\n    // Dialog Properties\n    const { dialogProps } = this.props;\n\n    // Custom Properties\n    const { performingAction, userData } = this.props;\n\n    // Custom Functions\n    const { deleteAccount } = this.props;\n\n    const { username } = this.state;\n\n    const hasUsername = userData && userData.username;\n\n    return (\n      <Dialog\n        {...dialogProps}\n        onKeyPress={this.handleKeyPress}\n        onExited={this.handleExited}\n      >\n        <DialogTitle>Delete account?</DialogTitle>\n\n        <DialogContent>\n          <Box mb={hasUsername ? 2 : 0}>\n            <DialogContentText>\n              Deleted accounts can’t be recovered. All data associated with your\n              account will be deleted.\n            </DialogContentText>\n\n            {hasUsername && (\n              <DialogContentText>\n                Type your username and <Hidden xsDown>click</Hidden>\n                <Hidden smUp>tap</Hidden> Delete to delete your account. This\n                action is irreversible.\n              </DialogContentText>\n            )}\n          </Box>\n\n          {hasUsername && (\n            <TextField\n              autoComplete=\"username\"\n              autoFocus\n              color=\"secondary\"\n              disabled={performingAction}\n              fullWidth\n              label=\"Username\"\n              placeholder={userData.username}\n              required\n              type=\"text\"\n              value={username}\n              variant=\"outlined\"\n              onChange={this.handleUsernameChange}\n            />\n          )}\n        </DialogContent>\n\n        <DialogActions>\n          <Button\n            color=\"secondary\"\n            disabled={performingAction}\n            onClick={dialogProps.onClose}\n          >\n            Cancel\n          </Button>\n          <Button\n            color=\"secondary\"\n            disabled={\n              performingAction ||\n              (hasUsername && username !== userData.username)\n            }\n            variant=\"contained\"\n            onClick={deleteAccount}\n          >\n            Delete\n          </Button>\n        </DialogActions>\n      </Dialog>\n    );\n  }\n}\n\nDeleteAccountDialog.propTypes = {\n  // Dialog Properties\n  dialogProps: PropTypes.object.isRequired,\n\n  // Custom Properties\n  performingAction: PropTypes.bool.isRequired,\n  userData: PropTypes.object,\n\n  // Custom Functions\n  deleteAccount: PropTypes.func.isRequired\n};\n\nexport default DeleteAccountDialog;\n","import React, { Component } from \"react\";\n\nimport PropTypes from \"prop-types\";\n\nimport { withStyles } from \"@material-ui/core/styles\";\n\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\n\nconst styles = theme => ({\n  noTitlePadding: {\n    paddingTop: theme.spacing(3)\n  }\n});\n\nclass AlertDialog extends Component {\n  render() {\n    // Styling\n    const { classes } = this.props;\n\n    // Dialog Properties\n    const { dialogProps } = this.props;\n\n    // Custom Properties\n    const {\n      title,\n      contentText,\n      dismissiveAction,\n      confirmingAction,\n      acknowledgementAction\n    } = this.props;\n\n    if ((dismissiveAction || confirmingAction) && acknowledgementAction) {\n      console.error(\n        \"Dialogs should contain a maximum of two actions. \" +\n          \"If a single action is provided, it must be an acknowledgement action. \" +\n          \"If two actions are provided, one must be a confirming action, and the other a dismissing action. \" +\n          \"Providing a third action such as “Learn more” is not recommended as it navigates the user away from the dialog, leaving the dialog task unfinished. \" +\n          \"https://material.io/design/components/dialogs.html#actions\"\n      );\n\n      return null;\n    }\n\n    return (\n      <Dialog {...dialogProps}>\n        {title && <DialogTitle>{title}</DialogTitle>}\n\n        <DialogContent className={title ? null : classes.noTitlePadding}>\n          <DialogContentText>{contentText}</DialogContentText>\n        </DialogContent>\n\n        {(dismissiveAction || confirmingAction || acknowledgementAction) && (\n          <DialogActions>\n            {dismissiveAction}\n            {confirmingAction}\n            {acknowledgementAction}\n          </DialogActions>\n        )}\n      </Dialog>\n    );\n  }\n}\n\nAlertDialog.propTypes = {\n  // Styling\n  classes: PropTypes.object.isRequired,\n\n  // Dialog Properties\n  dialogProps: PropTypes.object.isRequired,\n\n  // Custom Properties\n  title: PropTypes.string,\n  contentText: PropTypes.string.isRequired,\n  dismissiveAction: PropTypes.element,\n  confirmingAction: PropTypes.element,\n  acknowledgementAction: PropTypes.element\n};\n\nexport default withStyles(styles)(AlertDialog);\n","import React, { Component } from \"react\";\n\nimport PropTypes from \"prop-types\";\n\nimport Hidden from \"@material-ui/core/Hidden\";\n\nimport AboutDialog from \"../AboutDialog\";\nimport SignUpDialog from \"../SignUpDialog\";\nimport SignInDialog from \"../SignInDialog\";\nimport SettingsDialog from \"../SettingsDialog\";\nimport DeleteAccountDialog from \"../DeleteAccountDialog\";\nimport AlertDialog from \"../AlertDialog\";\n\nclass DialogHost extends Component {\n  render() {\n    // Properties\n    const { performingAction, theme, user, userData, dialogs } = this.props;\n\n    // Functions\n    const { openSnackbar } = this.props;\n\n    const aboutDialog = dialogs.aboutDialog;\n    const signUpDialog = dialogs.signUpDialog;\n    const signInDialog = dialogs.signInDialog;\n    const settingsDialog = dialogs.settingsDialog;\n    const deleteAccountDialog = dialogs.deleteAccountDialog;\n    const signOutDialog = dialogs.signOutDialog;\n\n    return (\n      <>\n        <AboutDialog\n          dialogProps={aboutDialog.dialogProps}\n          performingAction={performingAction}\n          theme={theme}\n          user={user}\n          userData={userData}\n          openSnackbar={openSnackbar}\n          {...aboutDialog.props}\n        />\n\n        {user && (\n          <>\n            <AlertDialog\n              dialogProps={signOutDialog.dialogProps}\n              performingAction={performingAction}\n              theme={theme}\n              user={user}\n              userData={userData}\n              openSnackbar={openSnackbar}\n              {...signOutDialog.props}\n            />\n          </>\n        )}\n\n        <Hidden xsDown>\n          {user && (\n            <>\n              <DeleteAccountDialog\n                dialogProps={deleteAccountDialog.dialogProps}\n                performingAction={performingAction}\n                theme={theme}\n                user={user}\n                userData={userData}\n                openSnackbar={openSnackbar}\n                {...deleteAccountDialog.props}\n              />\n            </>\n          )}\n\n          {!user && (\n            <>\n              <SignUpDialog\n                dialogProps={signUpDialog.dialogProps}\n                performingAction={performingAction}\n                theme={theme}\n                user={user}\n                userData={userData}\n                openSnackbar={openSnackbar}\n                {...signUpDialog.props}\n              />\n\n              <SignInDialog\n                dialogProps={signInDialog.dialogProps}\n                performingAction={performingAction}\n                theme={theme}\n                user={user}\n                userData={userData}\n                openSnackbar={openSnackbar}\n                {...signInDialog.props}\n              />\n            </>\n          )}\n        </Hidden>\n\n        <Hidden smDown>\n          {user && (\n            <>\n              <SettingsDialog\n                dialogProps={settingsDialog.dialogProps}\n                performingAction={performingAction}\n                theme={theme}\n                user={user}\n                userData={userData}\n                openSnackbar={openSnackbar}\n                {...settingsDialog.props}\n              />\n            </>\n          )}\n        </Hidden>\n\n        <Hidden smUp>\n          {user && (\n            <>\n              <DeleteAccountDialog\n                dialogProps={{\n                  fullScreen: true,\n\n                  ...deleteAccountDialog.dialogProps\n                }}\n                performingAction={performingAction}\n                theme={theme}\n                user={user}\n                userData={userData}\n                openSnackbar={openSnackbar}\n                {...deleteAccountDialog.props}\n              />\n            </>\n          )}\n\n          {!user && (\n            <>\n              <SignUpDialog\n                dialogProps={{\n                  fullScreen: true,\n\n                  ...signUpDialog.dialogProps\n                }}\n                performingAction={performingAction}\n                theme={theme}\n                user={user}\n                userData={userData}\n                openSnackbar={openSnackbar}\n                {...signUpDialog.props}\n              />\n\n              <SignInDialog\n                dialogProps={{\n                  fullScreen: true,\n\n                  ...signInDialog.dialogProps\n                }}\n                performingAction={performingAction}\n                theme={theme}\n                user={user}\n                userData={userData}\n                openSnackbar={openSnackbar}\n                {...signInDialog.props}\n              />\n            </>\n          )}\n        </Hidden>\n\n        <Hidden mdUp>\n          {user && (\n            <>\n              <SettingsDialog\n                dialogProps={{\n                  fullScreen: true,\n\n                  ...settingsDialog.dialogProps\n                }}\n                performingAction={performingAction}\n                theme={theme}\n                user={user}\n                userData={userData}\n                openSnackbar={openSnackbar}\n                {...settingsDialog.props}\n              />\n            </>\n          )}\n        </Hidden>\n      </>\n    );\n  }\n}\n\nDialogHost.propTypes = {\n  // Properties\n  performingAction: PropTypes.bool.isRequired,\n  theme: PropTypes.object.isRequired,\n  user: PropTypes.object,\n  userData: PropTypes.object,\n  dialogs: PropTypes.object.isRequired,\n\n  // Functions\n  openSnackbar: PropTypes.func.isRequired\n};\n\nexport default DialogHost;\n","import React, { Component } from \"react\";\n\nimport readingTime from \"reading-time\";\n\nimport { MuiThemeProvider } from \"@material-ui/core/styles\";\n\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport Button from \"@material-ui/core/Button\";\nimport Snackbar from \"@material-ui/core/Snackbar\";\n\nimport { auth, firestore } from \"../../firebase\";\nimport authentication from \"../../services/authentication\";\nimport appearance from \"../../services/appearance\";\n\nimport ErrorBoundary from \"../ErrorBoundary\";\nimport LaunchScreen from \"../LaunchScreen\";\nimport Bar from \"../Bar\";\nimport Router from \"../Router\";\nimport DialogHost from \"../DialogHost\";\n\nconst initialState = {\n  ready: false,\n  performingAction: false,\n  theme: appearance.defaultTheme,\n  user: null,\n  userData: null,\n  roles: [],\n\n  aboutDialog: {\n    open: false\n  },\n\n  signUpDialog: {\n    open: false\n  },\n\n  signInDialog: {\n    open: false\n  },\n\n  settingsDialog: {\n    open: false\n  },\n\n  deleteAccountDialog: {\n    open: false\n  },\n\n  signOutDialog: {\n    open: false\n  },\n\n  snackbar: {\n    autoHideDuration: 0,\n    message: \"\",\n    open: false\n  }\n};\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = initialState;\n  }\n\n  resetState = callback => {\n    this.setState(\n      {\n        ready: true,\n        theme: appearance.defaultTheme,\n        user: null,\n        userData: null,\n        roles: []\n      },\n      callback\n    );\n  };\n\n  setTheme = (theme, callback) => {\n    if (!theme) {\n      this.setState(\n        {\n          theme: appearance.defaultTheme\n        },\n        callback\n      );\n\n      return;\n    }\n\n    this.setState(\n      {\n        theme: appearance.createTheme(theme)\n      },\n      callback\n    );\n  };\n\n  openDialog = (dialogId, callback) => {\n    const dialog = this.state[dialogId];\n\n    if (!dialog || dialog.open === undefined || null) {\n      return;\n    }\n\n    dialog.open = true;\n\n    this.setState({ dialog }, callback);\n  };\n\n  closeDialog = (dialogId, callback) => {\n    const dialog = this.state[dialogId];\n\n    if (!dialog || dialog.open === undefined || null) {\n      return;\n    }\n\n    dialog.open = false;\n\n    this.setState({ dialog }, callback);\n  };\n\n  closeAllDialogs = callback => {\n    this.setState(\n      {\n        aboutDialog: {\n          open: false\n        },\n\n        signUpDialog: {\n          open: false\n        },\n\n        signInDialog: {\n          open: false\n        },\n\n        settingsDialog: {\n          open: false\n        },\n\n        deleteAccountDialog: {\n          open: false\n        },\n\n        signOutDialog: {\n          open: false\n        }\n      },\n      callback\n    );\n  };\n\n  deleteAccount = () => {\n    this.setState(\n      {\n        performingAction: true\n      },\n      () => {\n        authentication\n          .deleteAccount()\n          .then(() => {\n            this.closeAllDialogs(() => {\n              this.openSnackbar(\"Deleted account\");\n            });\n          })\n          .catch(reason => {\n            const code = reason.code;\n            const message = reason.message;\n\n            switch (code) {\n              default:\n                this.openSnackbar(message);\n                return;\n            }\n          })\n          .finally(() => {\n            this.setState({\n              performingAction: false\n            });\n          });\n      }\n    );\n  };\n\n  signOut = () => {\n    this.setState(\n      {\n        performingAction: true\n      },\n      () => {\n        authentication\n          .signOut()\n          .then(() => {\n            this.closeAllDialogs(() => {\n              this.openSnackbar(\"Signed out\");\n            });\n          })\n          .catch(reason => {\n            const code = reason.code;\n            const message = reason.message;\n\n            switch (code) {\n              default:\n                this.openSnackbar(message);\n                return;\n            }\n          })\n          .finally(() => {\n            this.setState({\n              performingAction: false\n            });\n          });\n      }\n    );\n  };\n\n  openSnackbar = (message, autoHideDuration = 2, callback) => {\n    this.setState(\n      {\n        snackbar: {\n          autoHideDuration: readingTime(message).time * autoHideDuration,\n          message,\n          open: true\n        }\n      },\n      () => {\n        if (callback && typeof callback === \"function\") {\n          callback();\n        }\n      }\n    );\n  };\n\n  closeSnackbar = (clearMessage = false) => {\n    const { snackbar } = this.state;\n\n    this.setState({\n      snackbar: {\n        message: clearMessage ? \"\" : snackbar.message,\n        open: false\n      }\n    });\n  };\n\n  render() {\n    const {\n      ready,\n      performingAction,\n      theme,\n      user,\n      userData,\n      roles\n    } = this.state;\n\n    const {\n      aboutDialog,\n      signUpDialog,\n      signInDialog,\n      settingsDialog,\n      deleteAccountDialog,\n      signOutDialog\n    } = this.state;\n\n    const { snackbar } = this.state;\n\n    return (\n      <MuiThemeProvider theme={theme}>\n        <CssBaseline />\n\n        <ErrorBoundary>\n          {!ready && <LaunchScreen />}\n\n          {ready && (\n            <>\n              <Bar\n                performingAction={performingAction}\n                theme={theme}\n                user={user}\n                userData={userData}\n                onSignUpClick={() => this.openDialog(\"signUpDialog\")}\n                onSignInClick={() => this.openDialog(\"signInDialog\")}\n                onAboutClick={() => this.openDialog(\"aboutDialog\")}\n                onSettingsClick={() => this.openDialog(\"settingsDialog\")}\n                onSignOutClick={() => this.openDialog(\"signOutDialog\")}\n              />\n\n              <Router\n                user={user}\n                roles={roles}\n                openSnackbar={this.openSnackbar}\n              />\n\n              <DialogHost\n                performingAction={performingAction}\n                theme={theme}\n                user={user}\n                userData={userData}\n                openSnackbar={this.openSnackbar}\n                dialogs={{\n                  aboutDialog: {\n                    dialogProps: {\n                      open: aboutDialog.open,\n\n                      onClose: () => this.closeDialog(\"aboutDialog\")\n                    }\n                  },\n\n                  signUpDialog: {\n                    dialogProps: {\n                      open: signUpDialog.open,\n\n                      onClose: callback => {\n                        this.closeDialog(\"signUpDialog\");\n\n                        if (callback && typeof callback === \"function\") {\n                          callback();\n                        }\n                      }\n                    }\n                  },\n\n                  signInDialog: {\n                    dialogProps: {\n                      open: signInDialog.open,\n\n                      onClose: callback => {\n                        this.closeDialog(\"signInDialog\");\n\n                        if (callback && typeof callback === \"function\") {\n                          callback();\n                        }\n                      }\n                    }\n                  },\n\n                  settingsDialog: {\n                    dialogProps: {\n                      open: settingsDialog.open,\n\n                      onClose: () => this.closeDialog(\"settingsDialog\")\n                    },\n\n                    props: {\n                      onDeleteAccountClick: () =>\n                        this.openDialog(\"deleteAccountDialog\")\n                    }\n                  },\n\n                  deleteAccountDialog: {\n                    dialogProps: {\n                      open: deleteAccountDialog.open,\n\n                      onClose: () => this.closeDialog(\"deleteAccountDialog\")\n                    },\n\n                    props: {\n                      deleteAccount: this.deleteAccount\n                    }\n                  },\n\n                  signOutDialog: {\n                    dialogProps: {\n                      open: signOutDialog.open,\n\n                      onClose: () => this.closeDialog(\"signOutDialog\")\n                    },\n\n                    props: {\n                      title: \"Sign out?\",\n                      contentText:\n                        \"While signed out you are unable to manage your profile and conduct other activities that require you to be signed in.\",\n                      dismissiveAction: (\n                        <Button\n                          color=\"primary\"\n                          onClick={() => this.closeDialog(\"signOutDialog\")}\n                        >\n                          Cancel\n                        </Button>\n                      ),\n                      confirmingAction: (\n                        <Button\n                          color=\"primary\"\n                          disabled={performingAction}\n                          variant=\"contained\"\n                          onClick={this.signOut}\n                        >\n                          Sign Out\n                        </Button>\n                      )\n                    }\n                  }\n                }}\n              />\n\n              <Snackbar\n                autoHideDuration={snackbar.autoHideDuration}\n                message={snackbar.message}\n                open={snackbar.open}\n                onClose={this.closeSnackbar}\n              />\n            </>\n          )}\n        </ErrorBoundary>\n      </MuiThemeProvider>\n    );\n  }\n\n  componentDidMount() {\n    this.onAuthStateChangedObserver = auth.onAuthStateChanged(\n      user => {\n        // The user is not signed in or doesn’t have a user ID.\n        if (!user || !user.uid) {\n          if (this.userDocumentSnapshotListener) {\n            this.userDocumentSnapshotListener();\n          }\n\n          this.resetState();\n\n          return;\n        }\n\n        // The user is signed in, begin retrieval of external user data.\n        this.userDocumentSnapshotListener = firestore\n          .collection(\"users\")\n          .doc(user.uid)\n          .onSnapshot(\n            snapshot => {\n              const data = snapshot.data();\n\n              // The user doesn’t have a data point, equivalent to not signed in.\n              if (!snapshot.exists || !data) {\n                if (this.userDocumentSnapshotListener) {\n                  this.userDocumentSnapshotListener();\n                }\n\n                this.resetState();\n\n                return;\n              }\n\n              authentication\n                .getRoles()\n                .then(value => {\n                  this.setTheme(data.theme, () => {\n                    this.setState({\n                      ready: true,\n                      user: user,\n                      userData: data,\n                      roles: value || []\n                    });\n                  });\n                })\n                .catch(reason => {\n                  this.resetState(() => {\n                    const code = reason.code;\n                    const message = reason.message;\n\n                    switch (code) {\n                      default:\n                        this.openSnackbar(message);\n                        return;\n                    }\n                  });\n                });\n            },\n            error => {\n              this.resetState(() => {\n                const code = error.code;\n                const message = error.message;\n\n                switch (code) {\n                  default:\n                    this.openSnackbar(message);\n                    return;\n                }\n              });\n            }\n          );\n      },\n      error => {\n        this.resetState(() => {\n          const code = error.code;\n          const message = error.message;\n\n          switch (code) {\n            default:\n              this.openSnackbar(message);\n              return;\n          }\n        });\n      }\n    );\n  }\n\n  componentWillUnmount() {\n    if (this.onAuthStateChangedObserver) {\n      this.onAuthStateChangedObserver();\n    }\n\n    if (this.userDocumentSnapshotListener) {\n      this.userDocumentSnapshotListener();\n    }\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit http://bit.ly/CRA-PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See http://bit.ly/CRA-PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"typeface-roboto\";\nimport \"./index.css\";\nimport * as Sentry from \"@sentry/browser\";\nimport App from \"./components/App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nSentry.init({\n  dsn: process.env.REACT_APP_SENTRY_DSN,\n  release: `${process.env.REACT_APP_NAME}@${process.env.REACT_APP_VERSION}`\n});\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}